/*모델 대상 : 전월 Bain등급 보유 고객, 월배치 방식 기존 데이터 삭제 후 신규 데이터 insert 후 python내 모델 적용*/
--DROP TABLE CDS_AMT.TB_AMT_RETENTION_APPLY;
CREATE COLUMN TABLE CDS_AMT.TB_AMT_POTENTIAL_APPLY 
(				
	BAIN_GRADE_YM	NVARCHAR(6)	NOT NULL  COMMENT	'베인등급 기준연월'	
,	DNA_YM_WCNT	NVARCHAR(10)	NOT NULL  COMMENT	'DNA 기준연월'	
,	CUST_ID	NVARCHAR(20)	NOT NULL  COMMENT	'고객번호'	
,	BAIN_GRADE_CD	NVARCHAR(2)	NOT NULL  COMMENT	'회원등급_베인등급 코드'	
,	GRADE_NM	NVARCHAR(100)	COMMENT	'회원등급_베인등급 이름'	
,	CNT_RT_Q1_Q2	DECIMAL(30,6)	COMMENT	'구매횟수 증감율(최근3개월과 4~6개월 비교)'	
,	DAVG_AMT_RT_Q1_Q2	DECIMAL(30,6)	COMMENT	'회당객단가 증감율(최근3개월과 4~6개월 비교)'	
,	PURCHS_CYCLE_RT_BF_0M_5M	DECIMAL(30,6)	COMMENT	'구매주기 증감율(현재와 5개월전 DNA 비교)'	
,	PURCHS_VISIT_CHG_RT_AVG_6M	DECIMAL(30,6)	COMMENT	'연간 구매횟수 변화율 6개월 평균'	
,	RFM_LV_RT_BF_0M_3M	DECIMAL(30,6)	COMMENT	'RFM 가치등급 증감율(현재와 3개월전 DNA 비교) '	
,	RFM_R_SCORE_RT_BF_0M_3M	DECIMAL(30,6)	COMMENT	'RFM R Score 증감율(현재와 3개월전 DNA 비교)'	
,	RFM_M_SCORE_RT_BF_0M_3M	DECIMAL(30,6)	COMMENT	'RFM M Score 증감율(현재와 3개월전 DNA 비교)'	
,	RFM_LV_DI_FRESH1_RT_BF_0M_3M	DECIMAL(30,6)	COMMENT	'RFM 가치등급(신선1) 증감율(현재와 3개월전 DNA 비교)'	
,	RFM_R_SCORE_RT_BF_0M_5M	DECIMAL(30,6)	COMMENT	'RFM R Score 증감율(현재와 5개월전 DNA 비교)'	
,	RFM_F_SCORE_RT_BF_0M_5M	DECIMAL(30,6)	COMMENT	'RFM F Score 증감율(현재와 5개월전 DNA 비교)'	
,	RFM_M_SCORE_RT_BF_0M_5M	DECIMAL(30,6)	COMMENT	'RFM M Score 증감율(현재와 5개월전 DNA 비교)'	
,	RFM_R_SCORE	SMALLINT	COMMENT	'RFM R Score'	
,	RFM_F_SCORE	SMALLINT	COMMENT	'RFM F Score'	
,	RFM_M_SCORE	SMALLINT	COMMENT	'RFM M Score'	
,	RFM_LV_DI_PRCS	SMALLINT	COMMENT	'RFM 가치등급(가공일상)'	
,	CNT_TOT_6M	DECIMAL(30)	COMMENT	'구매횟수합계_6개월간'	
,	CNT_Q1	DECIMAL(30)	COMMENT	'구매횟수합계_최근3개월'	
,	CNT_Q2	DECIMAL(30)	COMMENT	'구매횟수합계_4~6개월전'	
,	CNT_BF0M	DECIMAL(30)	COMMENT	'구매횟수합계_최근1개월'	
,	DAVG_AMT_TOT_6M	DECIMAL(30,3)	COMMENT	'회당객단가_6개월간'	
,	DAVG_AMT_Q2	DECIMAL(30,3)	COMMENT	'회당객단가_4~6개월전'	
,	PURCHS_CYCLE_ELAPSE	SMALLINT	COMMENT	'구매경과일'	
,	PURCHS_WKD	DECIMAL(30,3)	COMMENT	'주중 구매 경향성'	
					
, 	CONSTRAINT  TB_AMT_POTENTIAL_APPLY PRIMARY KEY (BAIN_GRADE_YM,DNA_YM_WCNT,CUST_ID,BAIN_GRADE_CD)		
)					
UNLOAD PRIORITY 5 AUTO MERGE COMMENT '(분석마트)Potential모델 월별 고객잠재우수가망예측대상테이블' 



/*위의 생성 테이블에 신규 조회 데이터 insert*/
TRUNCATE TABLE  TB_AMT_POTENTIAL_APPLY;

INSERT INTO TB_AMT_POTENTIAL_APPLY
(
WITH POTENTIAL_TARGET AS (
SELECT :YM_BAIN AS BAIN_GRADE_YM , YM_WCNT, A.CUST_ID,A.GRADE_CD  FROM  CDS_DW.TB_BAIN_MEMBR_GRADE A
JOIN 
(SELECT  CUST_ID, YM_WCNT FROM  CDS_AMT.TB_AMT_BIZTP_CUST_DNA_DATA  WHERE BIZTP_CD = '10' AND TO_CHAR(YM_WCNT ,'YYYYMM')  = to_char(ADD_MONTHS(:YM_BAIN, +1),'YYYYMM') AND RFM_LV > 0) B
on A.CUST_ID = B.CUST_ID 
WHERE A.GRADE_YM = :YM_BAIN  
),

RCIPT_DETAIL AS  (
			     SELECT B.CUST_ID
			     ,A.BSN_DT
			     ,D.PRDT_DI_CD
			     ,SUM(A.SALE_AMT)  AS SALE_AMT
				 FROM  CDS_DW.TB_DW_RCIPT_DETAIL A
				 JOIN POTENTIAL_TARGET B ON A.CUST_ID = B.CUST_ID
				 JOIN( SELECT PRDT_CD ,PRDT_DCODE_CD
				       FROM CDS_DW.TB_DW_PRDT_MASTR 
				       WHERE AFLCO_CD = '001' AND BIZTP_CD = '10') C ON A.PRDT_CD  = C.PRDT_CD
		         JOIN( SELECT PRDT_DCODE_CD,PRDT_DI_CD
				   	   FROM CDS_DW.TB_DW_PRDT_DCODE_CD
				   	   WHERE AFLCO_CD = '001' AND BIZTP_CD = '10') D ON C.PRDT_DCODE_CD  = D.PRDT_DCODE_CD 
				 WHERE TO_CHAR( BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN, +0),'YYYYMM')
				   AND A.AFLCO_CD ='001' 
				   AND A.BIZTP_CD ='10'
				   AND A.SALE_TRGT_YN    = 'Y'               
				   AND A.RL_SALE_TRGT_YN = 'Y'               
				   AND A.SALE_AMT > 0
				   AND A.CUST_ID IS NOT NULL
				 GROUP BY 
				 B.CUST_ID
				 ,A.BSN_DT
			     ,D.PRDT_DI_CD
			   ),
		   
SUMMARY_RCIPT_DETAIL   AS  (
				SELECT  CUST_ID
				      ,COUNT(DISTINCT BSN_DT)                                                  AS CNT_TOT_6M				      
 				      ,SUM(SALE_AMT)                                                           AS AMT_TOT_6M      
				      ,COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN,-0),'YYYYMM') THEN  BSN_DT ELSE NULL END) AS CNT_Q1  
				      ,COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN,-3),'YYYYMM') THEN  BSN_DT ELSE NULL END) AS CNT_Q2
				      ,SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN,-0),'YYYYMM') THEN SALE_AMT ELSE 0 END) AS AMT_Q1
				      ,SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN,-3),'YYYYMM') THEN  SALE_AMT ELSE 0 END) AS AMT_Q2
				      
				      ,COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') = TO_CHAR(ADD_MONTHS(:YM_BAIN,-0),'YYYYMM') THEN  BSN_DT ELSE NULL END) AS CNT_BF0M --베인등급 기준 산정월 기준 당월 실적
				      ,SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') = TO_CHAR(ADD_MONTHS(:YM_BAIN,-0),'YYYYMM')THEN SALE_AMT ELSE 0 END) AS AMT_BF0M  --베인등급 기준 산정월 기준 당월 실적
				     
				FROM RCIPT_DETAIL 
				GROUP BY CUST_ID
)

SELECT
		DF0.BAIN_GRADE_YM
	  , DF0.YM_WCNT AS DNA_YM_WCNT
	  , DF0.CUST_ID
  	  , COALESCE(DF0.GRADE_CD,'99') AS BAIN_GRADE_CD
	  , t4.GRADE_NM
      
--2) 성장가능성1 : 이용규모 성장성연계 DNA, 누계 실적 및 RFM 증감율
	  , CASE WHEN COALESCE(CNT_Q1,0) > 0 AND COALESCE(CNT_Q2,0)=0 THEN 1 ELSE COALESCE(COALESCE(CNT_Q1,0)/NULLIF(CNT_Q2,0) - 1,0) END AS CNT_RT_Q1_Q2 
	  , CASE WHEN COALESCE(DF1.AMT_Q1/NULLIF(DF1.CNT_Q1,0),0) > 0 AND COALESCE(DF1.AMT_Q2/NULLIF(DF1.CNT_Q2,0),0)=0 THEN 1 ELSE  COALESCE(COALESCE(DF1.AMT_Q1/NULLIF(DF1.CNT_Q1,0),0)/(DF1.AMT_Q2/NULLIF(DF1.CNT_Q2,0)) - 1,0) END AS DAVG_AMT_RT_Q1_Q2 

--	  , CASE WHEN COALESCE(t1.PURCHS_CYCLE,0) > 0 AND COALESCE(t5_1.PURCHS_CYCLE_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.PURCHS_CYCLE,0)/NULLIF(t5_1.PURCHS_CYCLE_BF3M,0) - 1,0) END AS PURCHS_CYCLE_RT_BF_0M_3M
	  , CASE WHEN COALESCE(t1.PURCHS_CYCLE,0) > 0 AND COALESCE(t5_2.PURCHS_CYCLE_BF5M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.PURCHS_CYCLE,0)/NULLIF(t5_2.PURCHS_CYCLE_BF5M,0) - 1,0) END AS PURCHS_CYCLE_RT_BF_0M_5M
      , COALESCE(t1.PURCHS_VISIT_CHG_RT_AVG_6M,0) AS PURCHS_VISIT_CHG_RT_AVG_6M --연간 6개월간 구매횟수 증감율 평균
	  
/***************************************************************************************************/	  
/** 상품분류체계 변경 시 변경 부분1 시작 : 사용 항목 명칭 담당 코드에 맞게 삭제 및 추가**/     
		, CASE WHEN COALESCE(t1.RFM_LV,0) > 0 AND COALESCE(t5_1.RFM_LV_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV,0)/NULLIF(t5_1.RFM_LV_BF3M,0) - 1,0) END AS RFM_LV_RT_BF_0M_3M
		, CASE WHEN COALESCE(t1.RFM_R_SCORE,0) > 0 AND COALESCE(t5_1.RFM_R_SCORE_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_R_SCORE,0)/NULLIF(t5_1.RFM_R_SCORE_BF3M,0) - 1,0) END AS RFM_R_SCORE_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_F_SCORE,0) > 0 AND COALESCE(t5_1.RFM_F_SCORE_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_F_SCORE,0)/NULLIF(t5_1.RFM_F_SCORE_BF3M,0) - 1,0) END AS RFM_F_SCORE_RT_BF_0M_3M
		, CASE WHEN COALESCE(t1.RFM_M_SCORE,0) > 0 AND COALESCE(t5_1.RFM_M_SCORE_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_M_SCORE,0)/NULLIF(t5_1.RFM_M_SCORE_BF3M,0) - 1,0) END AS RFM_M_SCORE_RT_BF_0M_3M

		, CASE WHEN COALESCE(t1.RFM_LV_DI_FRESH1,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_FRESH1_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_FRESH1,0)/NULLIF(t5_1.RFM_LV_DI_FRESH1_BF3M,0) - 1,0) END AS RFM_LV_DI_FRESH1_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_FRESH2,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_FRESH2_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_FRESH2,0)/NULLIF(t5_1.RFM_LV_DI_FRESH2_BF3M,0) - 1,0) END AS RFM_LV_DI_FRESH2_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_PEACOCK,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_PEACOCK_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_PEACOCK,0)/NULLIF(t5_1.RFM_LV_DI_PEACOCK_BF3M,0) - 1,0) END AS RFM_LV_DI_PEACOCK_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_PRCS,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_PRCS_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_PRCS,0)/NULLIF(t5_1.RFM_LV_DI_PRCS_BF3M,0) - 1,0) END AS RFM_LV_DI_PRCS_RT_BF_0M_3M
-- 		, CASE WHEN COALESCE(t1.RFM_LV_DI_HNR,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_HNR_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_HNR,0)/NULLIF(t5_1.RFM_LV_DI_HNR_BF3M,0) - 1,0) END AS RFM_LV_DI_HNR_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_LIVING,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_LIVING_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_LIVING,0)/NULLIF(t5_1.RFM_LV_DI_LIVING_BF3M,0) - 1,0) END AS RFM_LV_DI_LIVING_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_MOLLYS,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_MOLLYS_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_MOLLYS,0)/NULLIF(t5_1.RFM_LV_DI_MOLLYS_BF3M,0) - 1,0) END AS RFM_LV_DI_MOLLYS_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_ELEC_CULTR,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_ELEC_CULTR_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_ELEC_CULTR,0)/NULLIF(t5_1.RFM_LV_DI_ELEC_CULTR_BF3M,0) - 1,0) END AS RFM_LV_DI_ELEC_CULTR_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_FSHN,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_FSHN_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_FSHN,0)/NULLIF(t5_1.RFM_LV_DI_FSHN_BF3M,0) - 1,0) END AS RFM_LV_DI_FSHN_RT_BF_0M_3M


		, CASE WHEN COALESCE(t1.RFM_R_SCORE,0) > 0 AND COALESCE(t5_2.RFM_R_SCORE_BF5M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_R_SCORE,0)/NULLIF(t5_2.RFM_R_SCORE_BF5M,0) - 1,0) END AS RFM_R_SCORE_RT_BF_0M_5M
		, CASE WHEN COALESCE(t1.RFM_F_SCORE,0) > 0 AND COALESCE(t5_2.RFM_F_SCORE_BF5M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_F_SCORE,0)/NULLIF(t5_2.RFM_F_SCORE_BF5M,0) - 1,0) END AS RFM_F_SCORE_RT_BF_0M_5M		
		, CASE WHEN COALESCE(t1.RFM_M_SCORE,0) > 0 AND COALESCE(t5_2.RFM_M_SCORE_BF5M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_M_SCORE,0)/NULLIF(t5_2.RFM_M_SCORE_BF5M,0) - 1,0) END AS RFM_M_SCORE_RT_BF_0M_5M
	
		
--2) 성장가능성1 : 이용실적 합계 및 순위
				      
--		,COALESCE(t1.RFM_LV,0) AS RFM_LV
		,COALESCE(t1.RFM_R_SCORE,0) AS RFM_R_SCORE
		,COALESCE(t1.RFM_F_SCORE,0) AS RFM_F_SCORE
		,COALESCE(t1.RFM_M_SCORE,0) AS RFM_M_SCORE
		
--		,COALESCE(t1.RFM_LV_DI_FRESH1,0) AS RFM_LV_DI_FRESH1
--		,COALESCE(t1.RFM_LV_DI_FRESH2,0) AS RFM_LV_DI_FRESH2
--		,COALESCE(t1.RFM_LV_DI_PEACOCK,0) AS RFM_LV_DI_PEACOCK
		,COALESCE(t1.RFM_LV_DI_PRCS,0) AS RFM_LV_DI_PRCS
--		,COALESCE(t1.RFM_LV_DI_HNR,0) AS RFM_LV_DI_HNR
--		,COALESCE(t1.RFM_LV_DI_LIVING,0) AS RFM_LV_DI_LIVING
--		,COALESCE(t1.RFM_LV_DI_MOLLYS,0) AS RFM_LV_DI_MOLLYS		
--		,COALESCE(t1.RFM_LV_DI_ELEC_CULTR,0) AS RFM_LV_DI_ELEC_CULTR
--		,COALESCE(t1.RFM_LV_DI_FSHN,0) AS RFM_LV_DI_FSHN		
		
		
/** 상품분류체계 변경 시 변경 부분1 끝 : 사용 항목 명칭 담당 코드에 맞게 삭제 및 추가**/     
/***************************************************************************************************/	  
		
		,COALESCE(DF1.CNT_TOT_6M,0) AS CNT_TOT_6M
		,COALESCE(DF1.CNT_Q1,0) AS CNT_Q1
		,COALESCE(DF1.CNT_Q2,0) AS CNT_Q2 
		,COALESCE(DF1.CNT_BF0M,0) AS CNT_BF0M 
		
		
		,COALESCE(DF1.AMT_TOT_6M/NULLIF(DF1.CNT_TOT_6M,0),0) AS DAVG_AMT_TOT_6M	 		
--	,COALESCE(DF1.AMT_Q1/NULLIF(DF1.CNT_Q1,0),0) AS DAVG_AMT_Q1	 
		,COALESCE(DF1.AMT_Q2/NULLIF(DF1.CNT_Q2,0),0) AS DAVG_AMT_Q2	 
--		,COALESCE(DF1.AMT_BF0M/NULLIF(DF1.CNT_BF0M,0),0) AS DAVG_AMT_BF0M 
	
		,CASE WHEN t1.PURCHS_CYCLE_ELAPSE > 180 OR t1.PURCHS_CYCLE_ELAPSE IS NULL THEN 180 ELSE t1.PURCHS_CYCLE_ELAPSE END AS PURCHS_CYCLE_ELAPSE -- 구매경과일 전처리 이곳에서 완료, 베인등급 산정고객 대상이므로 구매경과일 최대값 180~181이어야 정상. 180로 일괄 처리.
  
----3) 지속적 사용원인2 : 고객 구매 요인 유형	  
      , COALESCE(t1.PURCHS_WKD ,0) AS PURCHS_WKD 
      
FROM
POTENTIAL_TARGET AS DF0

JOIN TB_AMT_BIZTP_CUST_DNA_DATA t1 ON DF0.CUST_ID = t1.CUST_ID AND t1.AFLCO_CD ='001' AND t1.BIZTP_CD ='10' AND TO_CHAR(t1.YM_WCNT ,'YYYYMMDD')= CONCAT( TO_CHAR(ADD_MONTHS(:YM_BAIN,+1),'YYYYMM'),'01') 

LEFT JOIN CDS_DW.TB_BAIN_MEMBR_GRADE_CD t4 ON DF0.GRADE_CD = t4.GRADE_CD 

-- 고객의  과거DNA 변화 비교용 : 해당 DNA만 가져옴


/***************************************************************************************************/
/** 상품분류체계 변경 시 변경 부분2 시작 : 사용 항목 명칭 담당 코드에 맞게 삭제 및 추가**/     
LEFT JOIN 
(SELECT CUST_ID

				, RFM_LV AS RFM_LV_BF3M
				, RFM_R_SCORE AS RFM_R_SCORE_BF3M 				
				, RFM_F_SCORE AS RFM_F_SCORE_BF3M
				, RFM_M_SCORE AS RFM_M_SCORE_BF3M 				
				
				, RFM_LV_DI_FRESH1  AS RFM_LV_DI_FRESH1_BF3M 
				, RFM_LV_DI_FRESH2  AS RFM_LV_DI_FRESH2_BF3M 
				, RFM_LV_DI_PEACOCK AS RFM_LV_DI_PEACOCK_BF3M	
				, RFM_LV_DI_PRCS	AS RFM_LV_DI_PRCS_BF3M 									
				, RFM_LV_DI_HNR	    AS RFM_LV_DI_HNR_BF3M 									
				, RFM_LV_DI_LIVING	AS RFM_LV_DI_LIVING_BF3M 
				, RFM_LV_DI_MOLLYS  AS RFM_LV_DI_MOLLYS_BF3M
				, RFM_LV_DI_ELEC_CULTR	AS RFM_LV_DI_ELEC_CULTR_BF3M 	 
				, RFM_LV_DI_FSHN AS RFM_LV_DI_FSHN_BF3M 

			    , PURCHS_CYCLE AS PURCHS_CYCLE_BF3M
				FROM TB_AMT_BIZTP_CUST_DNA_DATA 
				WHERE  AFLCO_CD ='001' AND BIZTP_CD ='10'  AND TO_CHAR(YM_WCNT ,'YYYYMMDD')= CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN,+1-3),'YYYYMM'),'01')) t5_1 
				ON DF0.CUST_ID = t5_1.CUST_ID 
				
/** 상품분류체계 변경 시 변경 부분2 끝 : 사용 항목 명칭 담당 코드에 맞게 삭제 및 추가**/    
/***************************************************************************************************/				
				
-- 고객의  과거 5개월 전 DNA정보 				
LEFT JOIN 
(SELECT CUST_ID
--				, RFM_LV AS RFM_LV_BF5M
				, RFM_R_SCORE AS RFM_R_SCORE_BF5M 				
				, RFM_F_SCORE AS RFM_F_SCORE_BF5M
				, RFM_M_SCORE AS RFM_M_SCORE_BF5M 
				
				, PURCHS_CYCLE AS PURCHS_CYCLE_BF5M
				FROM TB_AMT_BIZTP_CUST_DNA_DATA  
				WHERE  AFLCO_CD ='001' AND BIZTP_CD ='10'  AND TO_CHAR(YM_WCNT ,'YYYYMMDD')= CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN,+1-5),'YYYYMM'),'01')) t5_2 
				ON DF0.CUST_ID = t5_2.CUST_ID

-- 고객의  과거 6개월 이력기준 
LEFT JOIN SUMMARY_RCIPT_DETAIL  DF1 ON DF0.CUST_ID = DF1.CUST_ID   
)








/*예측 결과 적재용 테이블  : python에서 모델 적용을 시키고 아래 결과 테이블에 insert 모두 python에서 수행*/
--DROP TABLE CDS_AMT.TB_AMT_POTENTIAL_RESULT

CREATE COLUMN TABLE CDS_AMT.TB_AMT_POTENTIAL_RESULT			
(				
	BAIN_GRADE_YM	NVARCHAR(6)	NOT NULL  COMMENT	'베인등급 기준연월'
,	CUST_ID	NVARCHAR(20)	NOT NULL  COMMENT	'고객번호'
,	BAIN_GRADE_CD	NVARCHAR(2)	NOT NULL  COMMENT	'회원등급_베인등급 코드'
,	PREDICT_PROB_AF1M	DECIMAL(30,6)	COMMENT	'잠재우수예측 확률_1개월 후, RFM가치점수 기준월 대비 상승확률'
,	PREDICT_PROB_AF2M	DECIMAL(30,6)	COMMENT	'잠재우수예측 확률_2개월 후, RFM가치점수 직전월(1개월 후 가치점수) 대비 상승확률'
,	PREDICT_PROB_AF3M	DECIMAL(30,6)	COMMENT	'잠재우수예측 확률_3개월 후, RFM가치점수 직전월(2개월 후 가치점수) 대비 상승확률'
,	PREDICT_PROB_GROUP	TINYINT	COMMENT	'잠재우수예측 확률 구분, 3개월의 RFM가치점수 상승확률 2회 이상 0.4이상 시 1 그 외 0'
,	DATA_CRTN_DT	DATE	COMMENT	'데이터생성일자'
, 	CONSTRAINT TB_AMT_POTENTIAL_RESULT PRIMARY KEY (BAIN_GRADE_YM,CUST_ID,BAIN_GRADE_CD)			
)
UNLOAD PRIORITY 5 AUTO MERGE COMMENT '(분석마트)Potential모델 월별 고객이탈예측결과' 
PARTITION BY RANGE ("BAIN_GRADE_YM")
(
PARTITION '202004' <=  VALUES < '202005',
PARTITION '202005' <=  VALUES < '202006',
PARTITION '202006' <=  VALUES < '202007',
PARTITION '202007' <=  VALUES < '202008',
PARTITION '202008' <=  VALUES < '202009',
PARTITION '202009' <=  VALUES < '202010',
PARTITION '202010' <=  VALUES < '202011',
PARTITION '202011' <=  VALUES < '202012',
PARTITION '202012' <=  VALUES < '202101',
PARTITION '202101' <=  VALUES < '202102',
PARTITION '202102' <=  VALUES < '202103',
PARTITION '202103' <=  VALUES < '202104',
PARTITION '202104' <=  VALUES < '202105',
PARTITION '202105' <=  VALUES < '202106',
PARTITION '202106' <=  VALUES < '202107',
PARTITION '202107' <=  VALUES < '202108',
PARTITION '202108' <=  VALUES < '202109',
PARTITION '202109' <=  VALUES < '202110',
PARTITION '202110' <=  VALUES < '202111',
PARTITION '202111' <=  VALUES < '202112',
PARTITION '202112' <=  VALUES < '202201',
PARTITION '202201' <=  VALUES < '202202',
PARTITION '202202' <=  VALUES < '202203',
PARTITION '202203' <=  VALUES < '202204',
PARTITION '202204' <=  VALUES < '202205',
PARTITION '202205' <=  VALUES < '202206',
PARTITION '202206' <=  VALUES < '202207',
PARTITION '202207' <=  VALUES < '202208',
PARTITION '202208' <=  VALUES < '202209',
PARTITION '202209' <=  VALUES < '202210',
PARTITION '202210' <=  VALUES < '202211',
PARTITION '202211' <=  VALUES < '202212',
PARTITION '202212' <=  VALUES < '202301',
PARTITION '202301' <=  VALUES < '202302',
PARTITION '202302' <=  VALUES < '202303',
PARTITION '202303' <=  VALUES < '202304',
PARTITION '202304' <=  VALUES < '202305',
PARTITION '202305' <=  VALUES < '202306',
PARTITION '202306' <=  VALUES < '202307',
PARTITION '202307' <=  VALUES < '202308',
PARTITION '202308' <=  VALUES < '202309',
PARTITION '202309' <=  VALUES < '202310',
PARTITION '202310' <=  VALUES < '202311',
PARTITION '202311' <=  VALUES < '202312',
PARTITION '202312' <=  VALUES < '202401',
PARTITION '202401' <=  VALUES < '202402',
PARTITION '202402' <=  VALUES < '202403',
PARTITION '202403' <=  VALUES < '202404',
PARTITION '202404' <=  VALUES < '202405',
PARTITION '202405' <=  VALUES < '202406',
PARTITION '202406' <=  VALUES < '202407',
PARTITION '202407' <=  VALUES < '202408',
PARTITION '202408' <=  VALUES < '202409',
PARTITION '202409' <=  VALUES < '202410',
PARTITION '202410' <=  VALUES < '202411',
PARTITION '202411' <=  VALUES < '202412',
PARTITION '202412' <=  VALUES < '202501',
PARTITION '202501' <=  VALUES < '202502',
PARTITION '202502' <=  VALUES < '202503',
PARTITION '202503' <=  VALUES < '202504',
PARTITION '202504' <=  VALUES < '202505',
PARTITION '202505' <=  VALUES < '202506',
PARTITION '202506' <=  VALUES < '202507',
PARTITION '202507' <=  VALUES < '202508',
PARTITION '202508' <=  VALUES < '202509',
PARTITION '202509' <=  VALUES < '202510',
PARTITION '202510' <=  VALUES < '202511',
PARTITION '202511' <=  VALUES < '202512',
PARTITION '202512' <=  VALUES < '202601',
PARTITION OTHERS)


/*예측 결과 검증 : 고객 수 및 그룹별 평균값 집계  */
SELECT BAIN_GRADE_YM ,BAIN_GRADE_CD 
,count(DISTINCT CUST_ID) AS cus
,avg(PREDICT_PROB_AF1M) AS PREDICT_PROB_AF1M 
,avg(PREDICT_PROB_AF2M) AS PREDICT_PROB_AF2M 
,avg(PREDICT_PROB_AF3M) AS PREDICT_PROB_AF3M
,sum()
FROM  TB_AMT_POTENTIAL_RESULT 
GROUP BY BAIN_GRADE_ym,BAIN_GRADE_CD
ORDER BY BAIN_GRADE_CD,BAIN_GRADE_YM
