INSERT INTO TB_AMT_POTENTIAL_APPLY  
(WITH POTENTIAL_TARGET AS (
SELECT '202009' AS BAIN_GRADE_YM , YM_WCNT, A.CUST_ID,A.GRADE_CD  FROM  CDS_DW.TB_BAIN_MEMBR_GRADE A
JOIN 
(SELECT  CUST_ID, YM_WCNT FROM  CDS_AMT.TB_AMT_BIZTP_CUST_DNA_DATA  WHERE BIZTP_CD = '10' AND TO_CHAR(YM_WCNT ,'YYYYMM')  = to_char(ADD_MONTHS('202009', +1),'YYYYMM') AND RFM_LV > 0) B
on A.CUST_ID = B.CUST_ID 
WHERE A.GRADE_YM = '202009'  
),

RCIPT_DETAIL AS  (
			     SELECT B.CUST_ID
			     ,A.BSN_DT
			     ,D.PRDT_DI_CD
			     ,SUM(A.SALE_AMT)  AS SALE_AMT
				 FROM  CDS_DW.TB_DW_RCIPT_DETAIL A
				 JOIN POTENTIAL_TARGET B ON A.CUST_ID = B.CUST_ID
				 JOIN( SELECT PRDT_CD ,PRDT_DCODE_CD
				       FROM CDS_DW.TB_DW_PRDT_MASTR 
				       WHERE AFLCO_CD = '001' AND BIZTP_CD = '10') C ON A.PRDT_CD  = C.PRDT_CD
		         JOIN( SELECT PRDT_DCODE_CD,PRDT_DI_CD
				   	   FROM CDS_DW.TB_DW_PRDT_DCODE_CD
				   	   WHERE AFLCO_CD = '001' AND BIZTP_CD = '10') D ON C.PRDT_DCODE_CD  = D.PRDT_DCODE_CD 
				 WHERE TO_CHAR( BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS('202009',-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS('202009', +0),'YYYYMM')
				   AND A.AFLCO_CD ='001' 
				   AND A.BIZTP_CD ='10'
				   AND A.SALE_TRGT_YN    = 'Y'               
				   AND A.RL_SALE_TRGT_YN = 'Y'               
				   AND A.SALE_AMT > 0
				   AND A.CUST_ID IS NOT NULL
				 GROUP BY 
				 B.CUST_ID
				 ,A.BSN_DT
			     ,D.PRDT_DI_CD
			   ),
		   
SUMMARY_RCIPT_DETAIL   AS  (
				SELECT  CUST_ID
				      ,COUNT(DISTINCT BSN_DT)                                                  AS CNT_TOT_6M				      
 				      ,SUM(SALE_AMT)                                                           AS AMT_TOT_6M      
				      ,COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS('202009',-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS('202009',-0),'YYYYMM') THEN  BSN_DT ELSE NULL END) AS CNT_Q1  
				      ,COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS('202009',-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS('202009',-3),'YYYYMM') THEN  BSN_DT ELSE NULL END) AS CNT_Q2
				      ,SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS('202009',-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS('202009',-0),'YYYYMM') THEN SALE_AMT ELSE 0 END) AS AMT_Q1
				      ,SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS('202009',-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS('202009',-3),'YYYYMM') THEN  SALE_AMT ELSE 0 END) AS AMT_Q2
				      
				      ,COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') = TO_CHAR(ADD_MONTHS('202009',-0),'YYYYMM') THEN  BSN_DT ELSE NULL END) AS CNT_BF0M --베인등급 기준 산정월 기준 당월 실적
				      ,SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') = TO_CHAR(ADD_MONTHS('202009',-0),'YYYYMM')THEN SALE_AMT ELSE 0 END) AS AMT_BF0M  --베인등급 기준 산정월 기준 당월 실적
				     
				FROM RCIPT_DETAIL 
				GROUP BY CUST_ID
)

SELECT
		DF0.BAIN_GRADE_YM
	  , DF0.YM_WCNT AS DNA_YM_WCNT
	  , DF0.CUST_ID
  	  , COALESCE(DF0.GRADE_CD,'99') AS BAIN_GRADE_CD
	  , t4.GRADE_NM
      
--2) 성장가능성1 : 이용규모 성장성연계 DNA, 누계 실적 및 RFM 증감율
	  , CASE WHEN COALESCE(CNT_Q1,0) > 0 AND COALESCE(CNT_Q2,0)=0 THEN 1 ELSE COALESCE(COALESCE(CNT_Q1,0)/NULLIF(CNT_Q2,0) - 1,0) END AS CNT_RT_Q1_Q2 
	  , CASE WHEN COALESCE(DF1.AMT_Q1/NULLIF(DF1.CNT_Q1,0),0) > 0 AND COALESCE(DF1.AMT_Q2/NULLIF(DF1.CNT_Q2,0),0)=0 THEN 1 ELSE  COALESCE(COALESCE(DF1.AMT_Q1/NULLIF(DF1.CNT_Q1,0),0)/(DF1.AMT_Q2/NULLIF(DF1.CNT_Q2,0)) - 1,0) END AS DAVG_AMT_RT_Q1_Q2 

--	  , CASE WHEN COALESCE(t1.PURCHS_CYCLE,0) > 0 AND COALESCE(t5_1.PURCHS_CYCLE_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.PURCHS_CYCLE,0)/NULLIF(t5_1.PURCHS_CYCLE_BF3M,0) - 1,0) END AS PURCHS_CYCLE_RT_BF_0M_3M
	  , CASE WHEN COALESCE(t1.PURCHS_CYCLE,0) > 0 AND COALESCE(t5_2.PURCHS_CYCLE_BF5M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.PURCHS_CYCLE,0)/NULLIF(t5_2.PURCHS_CYCLE_BF5M,0) - 1,0) END AS PURCHS_CYCLE_RT_BF_0M_5M
      , COALESCE(t1.PURCHS_VISIT_CHG_RT_AVG_6M,0) AS PURCHS_VISIT_CHG_RT_AVG_6M --연간 6개월간 구매횟수 증감율 평균
	  
/***************************************************************************************************/	  
/** 상품분류체계 변경 시 변경 부분1 시작 : 사용 항목 명칭 담당 코드에 맞게 삭제 및 추가**/     
		, CASE WHEN COALESCE(t1.RFM_LV,0) > 0 AND COALESCE(t5_1.RFM_LV_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV,0)/NULLIF(t5_1.RFM_LV_BF3M,0) - 1,0) END AS RFM_LV_RT_BF_0M_3M
		, CASE WHEN COALESCE(t1.RFM_R_SCORE,0) > 0 AND COALESCE(t5_1.RFM_R_SCORE_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_R_SCORE,0)/NULLIF(t5_1.RFM_R_SCORE_BF3M,0) - 1,0) END AS RFM_R_SCORE_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_F_SCORE,0) > 0 AND COALESCE(t5_1.RFM_F_SCORE_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_F_SCORE,0)/NULLIF(t5_1.RFM_F_SCORE_BF3M,0) - 1,0) END AS RFM_F_SCORE_RT_BF_0M_3M
		, CASE WHEN COALESCE(t1.RFM_M_SCORE,0) > 0 AND COALESCE(t5_1.RFM_M_SCORE_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_M_SCORE,0)/NULLIF(t5_1.RFM_M_SCORE_BF3M,0) - 1,0) END AS RFM_M_SCORE_RT_BF_0M_3M

		, CASE WHEN COALESCE(t1.RFM_LV_DI_FRESH1,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_FRESH1_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_FRESH1,0)/NULLIF(t5_1.RFM_LV_DI_FRESH1_BF3M,0) - 1,0) END AS RFM_LV_DI_FRESH1_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_FRESH2,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_FRESH2_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_FRESH2,0)/NULLIF(t5_1.RFM_LV_DI_FRESH2_BF3M,0) - 1,0) END AS RFM_LV_DI_FRESH2_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_PEACOCK,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_PEACOCK_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_PEACOCK,0)/NULLIF(t5_1.RFM_LV_DI_PEACOCK_BF3M,0) - 1,0) END AS RFM_LV_DI_PEACOCK_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_PRCS,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_PRCS_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_PRCS,0)/NULLIF(t5_1.RFM_LV_DI_PRCS_BF3M,0) - 1,0) END AS RFM_LV_DI_PRCS_RT_BF_0M_3M
-- 		, CASE WHEN COALESCE(t1.RFM_LV_DI_HNR,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_HNR_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_HNR,0)/NULLIF(t5_1.RFM_LV_DI_HNR_BF3M,0) - 1,0) END AS RFM_LV_DI_HNR_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_LIVING,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_LIVING_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_LIVING,0)/NULLIF(t5_1.RFM_LV_DI_LIVING_BF3M,0) - 1,0) END AS RFM_LV_DI_LIVING_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_MOLLYS,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_MOLLYS_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_MOLLYS,0)/NULLIF(t5_1.RFM_LV_DI_MOLLYS_BF3M,0) - 1,0) END AS RFM_LV_DI_MOLLYS_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_ELEC_CULTR,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_ELEC_CULTR_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_ELEC_CULTR,0)/NULLIF(t5_1.RFM_LV_DI_ELEC_CULTR_BF3M,0) - 1,0) END AS RFM_LV_DI_ELEC_CULTR_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_FSHN,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_FSHN_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_FSHN,0)/NULLIF(t5_1.RFM_LV_DI_FSHN_BF3M,0) - 1,0) END AS RFM_LV_DI_FSHN_RT_BF_0M_3M


		, CASE WHEN COALESCE(t1.RFM_R_SCORE,0) > 0 AND COALESCE(t5_2.RFM_R_SCORE_BF5M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_R_SCORE,0)/NULLIF(t5_2.RFM_R_SCORE_BF5M,0) - 1,0) END AS RFM_R_SCORE_RT_BF_0M_5M
		, CASE WHEN COALESCE(t1.RFM_F_SCORE,0) > 0 AND COALESCE(t5_2.RFM_F_SCORE_BF5M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_F_SCORE,0)/NULLIF(t5_2.RFM_F_SCORE_BF5M,0) - 1,0) END AS RFM_F_SCORE_RT_BF_0M_5M		
		, CASE WHEN COALESCE(t1.RFM_M_SCORE,0) > 0 AND COALESCE(t5_2.RFM_M_SCORE_BF5M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_M_SCORE,0)/NULLIF(t5_2.RFM_M_SCORE_BF5M,0) - 1,0) END AS RFM_M_SCORE_RT_BF_0M_5M
	
		
--2) 성장가능성1 : 이용실적 합계 및 순위
				      
--		,COALESCE(t1.RFM_LV,0) AS RFM_LV
		,COALESCE(t1.RFM_R_SCORE,0) AS RFM_R_SCORE
		,COALESCE(t1.RFM_F_SCORE,0) AS RFM_F_SCORE
		,COALESCE(t1.RFM_M_SCORE,0) AS RFM_M_SCORE
		
--		,COALESCE(t1.RFM_LV_DI_FRESH1,0) AS RFM_LV_DI_FRESH1
--		,COALESCE(t1.RFM_LV_DI_FRESH2,0) AS RFM_LV_DI_FRESH2
--		,COALESCE(t1.RFM_LV_DI_PEACOCK,0) AS RFM_LV_DI_PEACOCK
		,COALESCE(t1.RFM_LV_DI_PRCS,0) AS RFM_LV_DI_PRCS
--		,COALESCE(t1.RFM_LV_DI_HNR,0) AS RFM_LV_DI_HNR
--		,COALESCE(t1.RFM_LV_DI_LIVING,0) AS RFM_LV_DI_LIVING
--		,COALESCE(t1.RFM_LV_DI_MOLLYS,0) AS RFM_LV_DI_MOLLYS		
--		,COALESCE(t1.RFM_LV_DI_ELEC_CULTR,0) AS RFM_LV_DI_ELEC_CULTR
--		,COALESCE(t1.RFM_LV_DI_FSHN,0) AS RFM_LV_DI_FSHN		
		
		
/** 상품분류체계 변경 시 변경 부분1 끝 : 사용 항목 명칭 담당 코드에 맞게 삭제 및 추가**/     
/***************************************************************************************************/	  
		
		,COALESCE(DF1.CNT_TOT_6M,0) AS CNT_TOT_6M
		,COALESCE(DF1.CNT_Q1,0) AS CNT_Q1
		,COALESCE(DF1.CNT_Q2,0) AS CNT_Q2 
		,COALESCE(DF1.CNT_BF0M,0) AS CNT_BF0M 
		
		
		,COALESCE(DF1.AMT_TOT_6M/NULLIF(DF1.CNT_TOT_6M,0),0) AS DAVG_AMT_TOT_6M	 		
--	,COALESCE(DF1.AMT_Q1/NULLIF(DF1.CNT_Q1,0),0) AS DAVG_AMT_Q1	 
		,COALESCE(DF1.AMT_Q2/NULLIF(DF1.CNT_Q2,0),0) AS DAVG_AMT_Q2	 
--		,COALESCE(DF1.AMT_BF0M/NULLIF(DF1.CNT_BF0M,0),0) AS DAVG_AMT_BF0M 
	
		,CASE WHEN t1.PURCHS_CYCLE_ELAPSE > 180 OR t1.PURCHS_CYCLE_ELAPSE IS NULL THEN 180 ELSE t1.PURCHS_CYCLE_ELAPSE END AS PURCHS_CYCLE_ELAPSE -- 구매경과일 전처리 이곳에서 완료, 베인등급 산정고객 대상이므로 구매경과일 최대값 180~181이어야 정상. 180로 일괄 처리.
  
----3) 지속적 사용원인2 : 고객 구매 요인 유형	  
      , COALESCE(t1.PURCHS_WKD ,0) AS PURCHS_WKD 
      
FROM
POTENTIAL_TARGET AS DF0

JOIN TB_AMT_BIZTP_CUST_DNA_DATA t1 ON DF0.CUST_ID = t1.CUST_ID AND t1.AFLCO_CD ='001' AND t1.BIZTP_CD ='10' AND TO_CHAR(t1.YM_WCNT ,'YYYYMMDD')= CONCAT( TO_CHAR(ADD_MONTHS('202009',+1),'YYYYMM'),'01') 

LEFT JOIN CDS_DW.TB_BAIN_MEMBR_GRADE_CD t4 ON DF0.GRADE_CD = t4.GRADE_CD 

-- 고객의  과거DNA 변화 비교용 : 해당 DNA만 가져옴


/***************************************************************************************************/
/** 상품분류체계 변경 시 변경 부분2 시작 : 사용 항목 명칭 담당 코드에 맞게 삭제 및 추가**/     
LEFT JOIN 
(SELECT CUST_ID

				, RFM_LV AS RFM_LV_BF3M
				, RFM_R_SCORE AS RFM_R_SCORE_BF3M 				
				, RFM_F_SCORE AS RFM_F_SCORE_BF3M
				, RFM_M_SCORE AS RFM_M_SCORE_BF3M 				
				
				, RFM_LV_DI_FRESH1  AS RFM_LV_DI_FRESH1_BF3M 
				, RFM_LV_DI_FRESH2  AS RFM_LV_DI_FRESH2_BF3M 
				, RFM_LV_DI_PEACOCK AS RFM_LV_DI_PEACOCK_BF3M	
				, RFM_LV_DI_PRCS	AS RFM_LV_DI_PRCS_BF3M 									
				, RFM_LV_DI_HNR	    AS RFM_LV_DI_HNR_BF3M 									
				, RFM_LV_DI_LIVING	AS RFM_LV_DI_LIVING_BF3M 
				, RFM_LV_DI_MOLLYS  AS RFM_LV_DI_MOLLYS_BF3M
				, RFM_LV_DI_ELEC_CULTR	AS RFM_LV_DI_ELEC_CULTR_BF3M 	 
				, RFM_LV_DI_FSHN AS RFM_LV_DI_FSHN_BF3M 

			    , PURCHS_CYCLE AS PURCHS_CYCLE_BF3M
				FROM TB_AMT_BIZTP_CUST_DNA_DATA 
				WHERE  AFLCO_CD ='001' AND BIZTP_CD ='10'  AND TO_CHAR(YM_WCNT ,'YYYYMMDD')= CONCAT(TO_CHAR(ADD_MONTHS('202009',+1-3),'YYYYMM'),'01')) t5_1 
				ON DF0.CUST_ID = t5_1.CUST_ID 
				
/** 상품분류체계 변경 시 변경 부분2 끝 : 사용 항목 명칭 담당 코드에 맞게 삭제 및 추가**/    
/***************************************************************************************************/				
				
-- 고객의  과거 5개월 전 DNA정보 				
LEFT JOIN 
(SELECT CUST_ID
--				, RFM_LV AS RFM_LV_BF5M
				, RFM_R_SCORE AS RFM_R_SCORE_BF5M 				
				, RFM_F_SCORE AS RFM_F_SCORE_BF5M
				, RFM_M_SCORE AS RFM_M_SCORE_BF5M 
				
				, PURCHS_CYCLE AS PURCHS_CYCLE_BF5M
				FROM TB_AMT_BIZTP_CUST_DNA_DATA  
				WHERE  AFLCO_CD ='001' AND BIZTP_CD ='10'  AND TO_CHAR(YM_WCNT ,'YYYYMMDD')= CONCAT(TO_CHAR(ADD_MONTHS('202009',+1-5),'YYYYMM'),'01')) t5_2 
				ON DF0.CUST_ID = t5_2.CUST_ID

-- 고객의  과거 6개월 이력기준 
LEFT JOIN SUMMARY_RCIPT_DETAIL  DF1 ON DF0.CUST_ID = DF1.CUST_ID   
)
