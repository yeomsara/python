--TB_AMT_RETENTION_RESULT
--TB_AMT_POTENTIAL_RESULT

-- Retention PSI(전체)
SELECT :BAIN_YM AS BAIN_YM,SUM(PSI_INDEX) AS PSI_INDEX
FROM (
	SELECT   SCORE_GROUP
	       , TRAIN_MONTH_CNT
	       , TRAIN_MONTH_RT
	       , COMP_MONTH_CNT
	       , COMP_MONTH_RT
	       , ROUND((TRAIN_MONTH_RT-COMP_MONTH_RT)*LN(TRAIN_MONTH_RT/COMP_MONTH_RT),4) AS PSI_INDEX
	FROM ( SELECT  SCORE_GROUP
				   ,COUNT(CASE WHEN BAIN_GRADE_YM = '202005'
			             THEN CUST_ID
			             ELSE NULL END)	                                                             AS TRAIN_MONTH_CNT
			       ,COUNT(CASE WHEN BAIN_GRADE_YM = '202005' THEN CUST_ID ELSE NULL END)/
			        (MAX(CASE WHEN BAIN_GRADE_YM = '202005'THEN COUNT_CUST_ID ELSE NULL END))        AS TRAIN_MONTH_RT      
			       ,COUNT(CASE WHEN BAIN_GRADE_YM  NOT IN  ('202005') THEN CUST_ID ELSE NULL END)    AS COMP_MONTH_CNT
			       ,COUNT(CASE WHEN BAIN_GRADE_YM  NOT IN  ('202005') THEN CUST_ID ELSE NULL END)/
			        (MAX(CASE WHEN BAIN_GRADE_YM NOT IN ('202005')THEN COUNT_CUST_ID ELSE NULL END)) AS COMP_MONTH_RT    
			FROM (
			SELECT *,
			       CASE WHEN predict_prob < 0.1 THEN 10
			            WHEN predict_prob < 0.2 THEN 20
			            WHEN predict_prob < 0.3 THEN 30
			            WHEN predict_prob < 0.4 THEN 40
			            WHEN predict_prob < 0.5 THEN 50
			            WHEN predict_prob < 0.6 THEN 60
			            WHEN predict_prob < 0.7 THEN 70
			            WHEN predict_prob < 0.8 THEN 80
			            WHEN predict_prob < 0.9 THEN 90
			            ELSE 100 END AS score_group
			       ,COUNT(CUST_ID) over(partition by BAIN_GRADE_YM) AS COUNT_CUST_ID
			FROM TB_AMT_RETENTION_RESULT
			WHERE BAIN_GRADE_YM IN('202005',:BAIN_YM)
			)
			GROUP BY SCORE_GROUP
			ORDER BY SCORE_GROUP
	     ) T1
) T2


-- Retention PSI(우수)
SELECT :BAIN_YM AS BAIN_YM,SUM(PSI_INDEX) AS PSI_INDEX
FROM (
	SELECT   SCORE_GROUP
	       , TRAIN_MONTH_CNT
	       , TRAIN_MONTH_RT
	       , COMP_MONTH_CNT
	       , COMP_MONTH_RT
	       , ROUND((TRAIN_MONTH_RT-COMP_MONTH_RT)*LN(TRAIN_MONTH_RT/COMP_MONTH_RT),4) AS PSI_INDEX
	FROM ( SELECT  SCORE_GROUP
				   ,COUNT(CASE WHEN BAIN_GRADE_YM = '202005'
			             THEN CUST_ID
			             ELSE NULL END)	                                                             AS TRAIN_MONTH_CNT
			       ,COUNT(CASE WHEN BAIN_GRADE_YM = '202005' THEN CUST_ID ELSE NULL END)/
			        (MAX(CASE WHEN BAIN_GRADE_YM = '202005'THEN COUNT_CUST_ID ELSE NULL END))        AS TRAIN_MONTH_RT      
			       ,COUNT(CASE WHEN BAIN_GRADE_YM  NOT IN  ('202005') THEN CUST_ID ELSE NULL END)    AS COMP_MONTH_CNT
			       ,COUNT(CASE WHEN BAIN_GRADE_YM  NOT IN  ('202005') THEN CUST_ID ELSE NULL END)/
			        (MAX(CASE WHEN BAIN_GRADE_YM NOT IN ('202005')THEN COUNT_CUST_ID ELSE NULL END)) AS COMP_MONTH_RT    
			FROM (
			SELECT *,
			       CASE WHEN predict_prob < 0.1 THEN 10
			            WHEN predict_prob < 0.2 THEN 20
			            WHEN predict_prob < 0.3 THEN 30
			            WHEN predict_prob < 0.4 THEN 40
			            WHEN predict_prob < 0.5 THEN 50
			            WHEN predict_prob < 0.6 THEN 60
			            WHEN predict_prob < 0.7 THEN 70
			            WHEN predict_prob < 0.8 THEN 80
			            WHEN predict_prob < 0.9 THEN 90
			            ELSE 100 END AS score_group
			       ,COUNT(CUST_ID) over(partition by BAIN_GRADE_YM) AS COUNT_CUST_ID
			FROM TB_AMT_RETENTION_RESULT
			WHERE BAIN_GRADE_YM IN('202005',:BAIN_YM)
			AND BAIN_GRADE_CD IN('1','2')
			)
			GROUP BY SCORE_GROUP
			ORDER BY SCORE_GROUP
	     ) T1
) T2


-- Retention PSI(일반)
SELECT :BAIN_YM AS BAIN_YM,SUM(PSI_INDEX) AS PSI_INDEX
FROM (
	SELECT   SCORE_GROUP
	       , TRAIN_MONTH_CNT
	       , TRAIN_MONTH_RT
	       , COMP_MONTH_CNT
	       , COMP_MONTH_RT
	       , ROUND((TRAIN_MONTH_RT-COMP_MONTH_RT)*LN(TRAIN_MONTH_RT/COMP_MONTH_RT),4) AS PSI_INDEX
	FROM ( SELECT  SCORE_GROUP
				   ,COUNT(CASE WHEN BAIN_GRADE_YM = '202005'
			             THEN CUST_ID
			             ELSE NULL END)	                                                             AS TRAIN_MONTH_CNT
			       ,COUNT(CASE WHEN BAIN_GRADE_YM = '202005' THEN CUST_ID ELSE NULL END)/
			        (MAX(CASE WHEN BAIN_GRADE_YM = '202005'THEN COUNT_CUST_ID ELSE NULL END))        AS TRAIN_MONTH_RT      
			       ,COUNT(CASE WHEN BAIN_GRADE_YM  NOT IN  ('202005') THEN CUST_ID ELSE NULL END)    AS COMP_MONTH_CNT
			       ,COUNT(CASE WHEN BAIN_GRADE_YM  NOT IN  ('202005') THEN CUST_ID ELSE NULL END)/
			        (MAX(CASE WHEN BAIN_GRADE_YM NOT IN ('202005')THEN COUNT_CUST_ID ELSE NULL END)) AS COMP_MONTH_RT    
			FROM (
			SELECT *,
			       CASE WHEN predict_prob < 0.1 THEN 10
			            WHEN predict_prob < 0.2 THEN 20
			            WHEN predict_prob < 0.3 THEN 30
			            WHEN predict_prob < 0.4 THEN 40
			            WHEN predict_prob < 0.5 THEN 50
			            WHEN predict_prob < 0.6 THEN 60
			            WHEN predict_prob < 0.7 THEN 70
			            WHEN predict_prob < 0.8 THEN 80
			            WHEN predict_prob < 0.9 THEN 90
			            ELSE 100 END AS score_group
			       ,COUNT(CUST_ID) over(partition by BAIN_GRADE_YM) AS COUNT_CUST_ID
			FROM TB_AMT_RETENTION_RESULT
			WHERE BAIN_GRADE_YM IN('202005',:BAIN_YM)
			AND BAIN_GRADE_CD IN('3','4')
			)
			GROUP BY SCORE_GROUP
			ORDER BY SCORE_GROUP
	     ) T1
) T2

-- Potential PSI
SELECT 'AF1M' AS MONTH_TYPE,:BAIN_YM AS BAIN_YM,SUM(PSI_INDEX) AS PSI_INDEX
FROM (
	SELECT   SCORE_GROUP
	       , TRAIN_MONTH_CNT
	       , TRAIN_MONTH_RT
	       , COMP_MONTH_CNT
	       , COMP_MONTH_RT
	       , ROUND((TRAIN_MONTH_RT-COMP_MONTH_RT)*LN(TRAIN_MONTH_RT/COMP_MONTH_RT),4) AS PSI_INDEX
	FROM ( SELECT  SCORE_GROUP
				   ,COUNT(CASE WHEN BAIN_GRADE_YM = '202005'
			             THEN CUST_ID
			             ELSE NULL END)	                                                             AS TRAIN_MONTH_CNT
			       ,COUNT(CASE WHEN BAIN_GRADE_YM = '202005' THEN CUST_ID ELSE NULL END)/
			        (MAX(CASE WHEN BAIN_GRADE_YM = '202005'THEN COUNT_CUST_ID ELSE NULL END))        AS TRAIN_MONTH_RT      
			       ,COUNT(CASE WHEN BAIN_GRADE_YM  NOT IN  ('202005') THEN CUST_ID ELSE NULL END)    AS COMP_MONTH_CNT
			       ,COUNT(CASE WHEN BAIN_GRADE_YM  NOT IN  ('202005') THEN CUST_ID ELSE NULL END)/
			        (MAX(CASE WHEN BAIN_GRADE_YM NOT IN ('202005')THEN COUNT_CUST_ID ELSE NULL END)) AS COMP_MONTH_RT    
			FROM (
			SELECT *,
			       CASE WHEN PREDICT_PROB_AF1M < 0.1 THEN 10
			            WHEN PREDICT_PROB_AF1M < 0.2 THEN 20
			            WHEN PREDICT_PROB_AF1M < 0.3 THEN 30
			            WHEN PREDICT_PROB_AF1M < 0.4 THEN 40
			            WHEN PREDICT_PROB_AF1M < 0.5 THEN 50
			            WHEN PREDICT_PROB_AF1M < 0.6 THEN 60
			            WHEN PREDICT_PROB_AF1M < 0.7 THEN 70
			            WHEN PREDICT_PROB_AF1M < 0.8 THEN 80
			            WHEN PREDICT_PROB_AF1M < 0.9 THEN 90
			            ELSE 100 END AS score_group
			       ,COUNT(CUST_ID) over(partition by BAIN_GRADE_YM) AS COUNT_CUST_ID
			FROM TB_AMT_POTENTIAL_RESULT
			WHERE BAIN_GRADE_YM IN('202005',:BAIN_YM)
			)
			GROUP BY SCORE_GROUP
			ORDER BY SCORE_GROUP
	     ) T1
) T2
UNION ALL 
SELECT 'AF2M' AS MONTH_TYPE,:BAIN_YM AS BAIN_YM,SUM(PSI_INDEX) AS PSI_INDEX
FROM (
	SELECT   SCORE_GROUP
	       , TRAIN_MONTH_CNT
	       , TRAIN_MONTH_RT
	       , COMP_MONTH_CNT
	       , COMP_MONTH_RT
	       , ROUND((TRAIN_MONTH_RT-COMP_MONTH_RT)*LN(TRAIN_MONTH_RT/COMP_MONTH_RT),4) AS PSI_INDEX
	FROM ( SELECT  SCORE_GROUP
				   ,COUNT(CASE WHEN BAIN_GRADE_YM = '202005'
			             THEN CUST_ID
			             ELSE NULL END)	                                                             AS TRAIN_MONTH_CNT
			       ,COUNT(CASE WHEN BAIN_GRADE_YM = '202005' THEN CUST_ID ELSE NULL END)/
			        (MAX(CASE WHEN BAIN_GRADE_YM = '202005'THEN COUNT_CUST_ID ELSE NULL END))        AS TRAIN_MONTH_RT      
			       ,COUNT(CASE WHEN BAIN_GRADE_YM  NOT IN  ('202005') THEN CUST_ID ELSE NULL END)    AS COMP_MONTH_CNT
			       ,COUNT(CASE WHEN BAIN_GRADE_YM  NOT IN  ('202005') THEN CUST_ID ELSE NULL END)/
			        (MAX(CASE WHEN BAIN_GRADE_YM NOT IN ('202005')THEN COUNT_CUST_ID ELSE NULL END)) AS COMP_MONTH_RT    
			FROM (
			SELECT *,
			       CASE WHEN PREDICT_PROB_AF2M < 0.1 THEN 10
			            WHEN PREDICT_PROB_AF2M < 0.2 THEN 20
			            WHEN PREDICT_PROB_AF2M < 0.3 THEN 30
			            WHEN PREDICT_PROB_AF2M < 0.4 THEN 40
			            WHEN PREDICT_PROB_AF2M < 0.5 THEN 50
			            WHEN PREDICT_PROB_AF2M < 0.6 THEN 60
			            WHEN PREDICT_PROB_AF2M < 0.7 THEN 70
			            WHEN PREDICT_PROB_AF2M < 0.8 THEN 80
			            WHEN PREDICT_PROB_AF2M < 0.9 THEN 90
			            ELSE 100 END AS score_group
			       ,COUNT(CUST_ID) over(partition by BAIN_GRADE_YM) AS COUNT_CUST_ID
			FROM TB_AMT_POTENTIAL_RESULT
			WHERE BAIN_GRADE_YM IN('202005',:BAIN_YM)
			)
			GROUP BY SCORE_GROUP
			ORDER BY SCORE_GROUP
	     ) T1
) T2
UNION ALL 
SELECT 'AF3M' AS MONTH_TYPE,:BAIN_YM AS BAIN_YM,SUM(PSI_INDEX) AS PSI_INDEX
FROM (
	SELECT   SCORE_GROUP
	       , TRAIN_MONTH_CNT
	       , TRAIN_MONTH_RT
	       , COMP_MONTH_CNT
	       , COMP_MONTH_RT
	       , ROUND((TRAIN_MONTH_RT-COMP_MONTH_RT)*LN(TRAIN_MONTH_RT/COMP_MONTH_RT),4) AS PSI_INDEX
	FROM ( SELECT  SCORE_GROUP
				   ,COUNT(CASE WHEN BAIN_GRADE_YM = '202005'
			             THEN CUST_ID
			             ELSE NULL END)	                                                             AS TRAIN_MONTH_CNT
			       ,COUNT(CASE WHEN BAIN_GRADE_YM = '202005' THEN CUST_ID ELSE NULL END)/
			        (MAX(CASE WHEN BAIN_GRADE_YM = '202005'THEN COUNT_CUST_ID ELSE NULL END))        AS TRAIN_MONTH_RT      
			       ,COUNT(CASE WHEN BAIN_GRADE_YM  NOT IN  ('202005') THEN CUST_ID ELSE NULL END)    AS COMP_MONTH_CNT
			       ,COUNT(CASE WHEN BAIN_GRADE_YM  NOT IN  ('202005') THEN CUST_ID ELSE NULL END)/
			        (MAX(CASE WHEN BAIN_GRADE_YM NOT IN ('202005')THEN COUNT_CUST_ID ELSE NULL END)) AS COMP_MONTH_RT    
			FROM (
			SELECT *,
			       CASE WHEN PREDICT_PROB_AF3M < 0.1 THEN 10
			            WHEN PREDICT_PROB_AF3M < 0.2 THEN 20
			            WHEN PREDICT_PROB_AF3M < 0.3 THEN 30
			            WHEN PREDICT_PROB_AF3M < 0.4 THEN 40
			            WHEN PREDICT_PROB_AF3M < 0.5 THEN 50
			            WHEN PREDICT_PROB_AF3M < 0.6 THEN 60
			            WHEN PREDICT_PROB_AF3M < 0.7 THEN 70
			            WHEN PREDICT_PROB_AF3M < 0.8 THEN 80
			            WHEN PREDICT_PROB_AF3M < 0.9 THEN 90
			            ELSE 100 END AS score_group
			       ,COUNT(CUST_ID) over(partition by BAIN_GRADE_YM) AS COUNT_CUST_ID
			FROM TB_AMT_POTENTIAL_RESULT
			WHERE BAIN_GRADE_YM IN('202005',:BAIN_YM)
			)
			GROUP BY SCORE_GROUP
			ORDER BY SCORE_GROUP
	     ) T1
) T2



-- Timing PSI
SELECT 'C1' AS CLASS_TYPE,:PRED_YMD AS PRED_YMD,SUM(PSI_INDEX) AS PSI_INDEX
FROM (
	SELECT   SCORE_GROUP
	       , TRAIN_MONTH_CNT
	       , TRAIN_MONTH_RT
	       , COMP_MONTH_CNT
	       , COMP_MONTH_RT
	       , ROUND((TRAIN_MONTH_RT-COMP_MONTH_RT)*LN(TRAIN_MONTH_RT/COMP_MONTH_RT),4) AS PSI_INDEX
	FROM ( SELECT  SCORE_GROUP
				   ,COUNT(CASE WHEN PRED_YMD = '20200901' THEN CUST_ID ELSE NULL END)	               AS TRAIN_MONTH_CNT
			       ,COUNT(CASE WHEN PRED_YMD = '20200901' THEN CUST_ID ELSE NULL END)/
			        (MAX( CASE WHEN PRED_YMD = '20200901' THEN COUNT_CUST_ID ELSE NULL END))           AS TRAIN_MONTH_RT      
			       ,COUNT(CASE WHEN PRED_YMD  NOT IN  ('20200901') THEN CUST_ID ELSE NULL END)         AS COMP_MONTH_CNT
			       ,COUNT(CASE WHEN PRED_YMD  NOT IN  ('20200901') THEN CUST_ID ELSE NULL END)/
			        (MAX( CASE WHEN PRED_YMD  NOT IN  ('20200901')   THEN COUNT_CUST_ID ELSE NULL END)) AS COMP_MONTH_RT    
			FROM (
			SELECT *,
			       CASE WHEN c1_prob < 0.1 THEN 10
			            WHEN c1_prob < 0.2 THEN 20
			            WHEN c1_prob < 0.3 THEN 30
			            WHEN c1_prob < 0.4 THEN 40
			            WHEN c1_prob < 0.5 THEN 50
			            WHEN c1_prob < 0.6 THEN 60
			            WHEN c1_prob < 0.7 THEN 70
			            WHEN c1_prob < 0.8 THEN 80
			            WHEN c1_prob < 0.9 THEN 90
			            ELSE 100 END AS score_group
			       ,COUNT(CUST_ID) over(partition by PRED_YMD) AS COUNT_CUST_ID
			FROM TB_AMT_TIMING_RESULT
			WHERE PRED_YMD IN('20200901',:PRED_YMD)
			)
			GROUP BY SCORE_GROUP
			ORDER BY SCORE_GROUP
	     ) T1
) T2
UNION ALL
SELECT 'C2' AS CLASS_TYPE,:PRED_YMD AS PRED_YMD,SUM(PSI_INDEX) AS PSI_INDEX
FROM (
	SELECT   SCORE_GROUP
	       , TRAIN_MONTH_CNT
	       , TRAIN_MONTH_RT
	       , COMP_MONTH_CNT
	       , COMP_MONTH_RT
	       , ROUND((TRAIN_MONTH_RT-COMP_MONTH_RT)*LN(TRAIN_MONTH_RT/COMP_MONTH_RT),4) AS PSI_INDEX
	FROM ( SELECT  SCORE_GROUP
				   ,COUNT(CASE WHEN PRED_YMD = '20200901' THEN CUST_ID ELSE NULL END)	               AS TRAIN_MONTH_CNT
			       ,COUNT(CASE WHEN PRED_YMD = '20200901' THEN CUST_ID ELSE NULL END)/
			        (MAX( CASE WHEN PRED_YMD = '20200901' THEN COUNT_CUST_ID ELSE NULL END))           AS TRAIN_MONTH_RT      
			       ,COUNT(CASE WHEN PRED_YMD  NOT IN  ('20200901') THEN CUST_ID ELSE NULL END)         AS COMP_MONTH_CNT
			       ,COUNT(CASE WHEN PRED_YMD  NOT IN  ('20200901') THEN CUST_ID ELSE NULL END)/
			        (MAX( CASE WHEN PRED_YMD  NOT IN  ('20200901')   THEN COUNT_CUST_ID ELSE NULL END)) AS COMP_MONTH_RT    
			FROM (
			SELECT *,
			       CASE WHEN c2_prob < 0.1 THEN 10
			            WHEN c2_prob < 0.2 THEN 20
			            WHEN c2_prob < 0.3 THEN 30
			            WHEN c2_prob < 0.4 THEN 40
			            WHEN c2_prob < 0.5 THEN 50
			            WHEN c2_prob < 0.6 THEN 60
			            WHEN c2_prob < 0.7 THEN 70
			            WHEN c2_prob < 0.8 THEN 80
			            WHEN c2_prob < 0.9 THEN 90
			            ELSE 100 END AS score_group
			       ,COUNT(CUST_ID) over(partition by PRED_YMD) AS COUNT_CUST_ID
			FROM TB_AMT_TIMING_RESULT
			WHERE PRED_YMD IN('20200901',:PRED_YMD)
			)
			GROUP BY SCORE_GROUP
			ORDER BY SCORE_GROUP
	     ) T1
) T2
UNION ALL
SELECT 'C3' AS CLASS_TYPE,:PRED_YMD AS PRED_YMD,SUM(PSI_INDEX) AS PSI_INDEX
FROM (
	SELECT   SCORE_GROUP
	       , TRAIN_MONTH_CNT
	       , TRAIN_MONTH_RT
	       , COMP_MONTH_CNT
	       , COMP_MONTH_RT
	       , ROUND((TRAIN_MONTH_RT-COMP_MONTH_RT)*LN(TRAIN_MONTH_RT/COMP_MONTH_RT),4) AS PSI_INDEX
	FROM ( SELECT  SCORE_GROUP
				   ,COUNT(CASE WHEN PRED_YMD = '20200901' THEN CUST_ID ELSE NULL END)	               AS TRAIN_MONTH_CNT
			       ,COUNT(CASE WHEN PRED_YMD = '20200901' THEN CUST_ID ELSE NULL END)/
			        (MAX( CASE WHEN PRED_YMD = '20200901' THEN COUNT_CUST_ID ELSE NULL END))           AS TRAIN_MONTH_RT      
			       ,COUNT(CASE WHEN PRED_YMD  NOT IN  ('20200901') THEN CUST_ID ELSE NULL END)         AS COMP_MONTH_CNT
			       ,COUNT(CASE WHEN PRED_YMD  NOT IN  ('20200901') THEN CUST_ID ELSE NULL END)/
			        (MAX( CASE WHEN PRED_YMD  NOT IN  ('20200901')   THEN COUNT_CUST_ID ELSE NULL END)) AS COMP_MONTH_RT    
			FROM (
			SELECT *,
			       CASE WHEN c3_prob < 0.1 THEN 10
			            WHEN c3_prob < 0.2 THEN 20
			            WHEN c3_prob < 0.3 THEN 30
			            WHEN c3_prob < 0.4 THEN 40
			            WHEN c3_prob < 0.5 THEN 50
			            WHEN c3_prob < 0.6 THEN 60
			            WHEN c3_prob < 0.7 THEN 70
			            WHEN c3_prob < 0.8 THEN 80
			            WHEN c3_prob < 0.9 THEN 90
			            ELSE 100 END AS score_group
			       ,COUNT(CUST_ID) over(partition by PRED_YMD) AS COUNT_CUST_ID
			FROM TB_AMT_TIMING_RESULT
			WHERE PRED_YMD IN('20200901',:PRED_YMD)
			)
			GROUP BY SCORE_GROUP
			ORDER BY SCORE_GROUP
	     ) T1
) T2