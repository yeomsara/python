WITH MONTHLY_MODULE_CD_COMB_TEST AS (
-- 국민가격
SELECT 'MONTHLY'AS BATCH_CYCLE,YM_WCNT,'EVENT_KUKMIN'AS MODULE,'ALL_CUST_ID_CNT'  AS DNA_CD,COUNT(CASE WHEN CUST_ID IS NOT NULL THEN 1 ELSE NULL END)  AS DEC_VALUE FROM CDS_AMT.TB_AMT_EVENT_SIMILARITY_KUKMIN_PRICE_RESULT            GROUP BY YM_WCNT
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,YM_WCNT,'EVENT_KUKMIN'AS MODULE,'F_TOTAL_SCORE'    AS DNA_CD,SUM(CASE WHEN F_TOTAL_SCORE IS NOT NULL THEN 1 ELSE 0 END) AS DEC_VALUE FROM CDS_AMT.TB_AMT_EVENT_SIMILARITY_KUKMIN_PRICE_RESULT  GROUP BY YM_WCNT
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,YM_WCNT,'EVENT_KUKMIN'AS MODULE,'SCORING_GROUP'    AS DNA_CD,SUM(CASE WHEN SCORING_GROUP IS NOT NULL THEN 1 ELSE 0 END) AS DEC_VALUE FROM CDS_AMT.TB_AMT_EVENT_SIMILARITY_KUKMIN_PRICE_RESULT  GROUP BY YM_WCNT
-- 국산의힘
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,YM_WCNT,'EVENT_KUKSAN'AS MODULE,'ALL_CUST_ID_CNT'  AS DNA_CD,COUNT(CASE WHEN CUST_ID IS NOT NULL THEN 1 ELSE NULL END)  AS DEC_VALUE FROM CDS_AMT.TB_AMT_EVENT_SIMILARITY_KUKSAN_EVENT_RESULT  GROUP BY YM_WCNT
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,YM_WCNT,'EVENT_KUKSAN'AS MODULE,'F_TOTAL_SCORE'    AS DNA_CD,SUM(CASE WHEN F_TOTAL_SCORE IS NOT NULL THEN 1 ELSE 0 END) AS DEC_VALUE FROM CDS_AMT.TB_AMT_EVENT_SIMILARITY_KUKSAN_EVENT_RESULT  GROUP BY YM_WCNT
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,YM_WCNT,'EVENT_KUKSAN'AS MODULE,'SCORING_GROUP'    AS DNA_CD,SUM(CASE WHEN SCORING_GROUP IS NOT NULL THEN 1 ELSE 0 END) AS DEC_VALUE FROM CDS_AMT.TB_AMT_EVENT_SIMILARITY_KUKSAN_EVENT_RESULT  GROUP BY YM_WCNT
-- 노브랜드
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,YM_WCNT,'EVENT_NOBRAND'AS MODULE,'ALL_CUST_ID_CNT'  AS DNA_CD,COUNT(CASE WHEN CUST_ID IS NOT NULL THEN 1 ELSE NULL END)  AS DEC_VALUE FROM CDS_AMT.TB_AMT_EVENT_SIMILARITY_NOBRAND_RESULT      GROUP BY YM_WCNT
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,YM_WCNT,'EVENT_NOBRAND'AS MODULE,'F_TOTAL_SCORE'    AS DNA_CD,SUM(CASE WHEN F_TOTAL_SCORE IS NOT NULL THEN 1 ELSE 0 END) AS DEC_VALUE FROM CDS_AMT.TB_AMT_EVENT_SIMILARITY_NOBRAND_RESULT		GROUP BY YM_WCNT
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,YM_WCNT,'EVENT_NOBRAND'AS MODULE,'SCORING_GROUP'    AS DNA_CD,SUM(CASE WHEN SCORING_GROUP IS NOT NULL THEN 1 ELSE 0 END) AS DEC_VALUE FROM CDS_AMT.TB_AMT_EVENT_SIMILARITY_NOBRAND_RESULT  	GROUP BY YM_WCNT
-- 피코크
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,YM_WCNT,'EVENT_PEACOCK'AS MODULE,'ALL_CUST_ID_CNT'  AS DNA_CD,COUNT(CASE WHEN CUST_ID IS NOT NULL THEN 1 ELSE NULL END)  AS DEC_VALUE FROM CDS_AMT.TB_AMT_EVENT_SIMILARITY_PEACOCK_RESULT      GROUP BY YM_WCNT
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,YM_WCNT,'EVENT_PEACOCK'AS MODULE,'F_TOTAL_SCORE'    AS DNA_CD,SUM(CASE WHEN F_TOTAL_SCORE IS NOT NULL THEN 1 ELSE 0 END) AS DEC_VALUE FROM CDS_AMT.TB_AMT_EVENT_SIMILARITY_PEACOCK_RESULT		GROUP BY YM_WCNT
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,YM_WCNT,'EVENT_PEACOCK'AS MODULE,'SCORING_GROUP'    AS DNA_CD,SUM(CASE WHEN SCORING_GROUP IS NOT NULL THEN 1 ELSE 0 END) AS DEC_VALUE FROM CDS_AMT.TB_AMT_EVENT_SIMILARITY_PEACOCK_RESULT  	GROUP BY YM_WCNT
--RETENTION
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,TO_CHAR(ADD_MONTHS(BAIN_GRADE_YM,1),'YYYYMMDD') AS YM_WCNT,'RETENTION'AS MODULE,'ALL_CUST_ID_CNT' AS DNA_CD,COUNT(CASE WHEN CUST_ID IS NOT NULL THEN 1 ELSE NULL END)  AS DEC_VALUE  FROM CDS_AMT.TB_AMT_RETENTION_RESULT GROUP BY BAIN_GRADE_YM 
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,TO_CHAR(ADD_MONTHS(BAIN_GRADE_YM,1),'YYYYMMDD') AS YM_WCNT,'RETENTION'AS MODULE,'BAIN_GRADE_CD' AS DNA_CD,  SUM(CASE WHEN BAIN_GRADE_CD IS NOT NULL THEN 1 ELSE 0 END)  AS DEC_VALUE  FROM CDS_AMT.TB_AMT_RETENTION_RESULT GROUP BY BAIN_GRADE_YM
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,TO_CHAR(ADD_MONTHS(BAIN_GRADE_YM,1),'YYYYMMDD') AS YM_WCNT,'RETENTION'AS MODULE,'PREDICT_PROB' AS DNA_CD,SUM(CASE WHEN PREDICT_PROB IS NOT NULL THEN 1 ELSE 0 END)  AS DEC_VALUE  FROM CDS_AMT.TB_AMT_RETENTION_RESULT GROUP BY BAIN_GRADE_YM
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,TO_CHAR(ADD_MONTHS(BAIN_GRADE_YM,1),'YYYYMMDD') AS YM_WCNT,'RETENTION'AS MODULE,'PREDICT_PROB_GROUP' AS DNA_CD,SUM(CASE WHEN PREDICT_PROB_GROUP IS NOT NULL THEN 1 ELSE 0 END)  AS DEC_VALUE  FROM CDS_AMT.TB_AMT_RETENTION_RESULT GROUP BY BAIN_GRADE_YM
--POTENTIAL
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,TO_CHAR(ADD_MONTHS(BAIN_GRADE_YM,1),'YYYYMMDD') AS YM_WCNT,'POTENTIAL'AS MODULE,'ALL_CUST_ID_CNT' AS DNA_CD,COUNT(CASE WHEN CUST_ID IS NOT NULL THEN 1 ELSE NULL END)  AS DEC_VALUE  FROM CDS_AMT.TB_AMT_POTENTIAL_RESULT GROUP BY BAIN_GRADE_YM 
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,TO_CHAR(ADD_MONTHS(BAIN_GRADE_YM,1),'YYYYMMDD') AS YM_WCNT,'POTENTIAL'AS MODULE,'BAIN_GRADE_CD' AS DNA_CD,  SUM(CASE WHEN BAIN_GRADE_CD IS NOT NULL THEN 1 ELSE 0 END)  AS DEC_VALUE  FROM CDS_AMT.TB_AMT_POTENTIAL_RESULT GROUP BY BAIN_GRADE_YM
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,TO_CHAR(ADD_MONTHS(BAIN_GRADE_YM,1),'YYYYMMDD') AS YM_WCNT,'POTENTIAL'AS MODULE,'PREDICT_PROB_AF1M' AS DNA_CD,SUM(CASE WHEN PREDICT_PROB_AF1M IS NOT NULL THEN 1 ELSE 0 END)  AS DEC_VALUE  FROM CDS_AMT.TB_AMT_POTENTIAL_RESULT GROUP BY BAIN_GRADE_YM
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,TO_CHAR(ADD_MONTHS(BAIN_GRADE_YM,1),'YYYYMMDD') AS YM_WCNT,'POTENTIAL'AS MODULE,'PREDICT_PROB_AF2M' AS DNA_CD,SUM(CASE WHEN PREDICT_PROB_AF2M IS NOT NULL THEN 1 ELSE 0 END)  AS DEC_VALUE  FROM CDS_AMT.TB_AMT_POTENTIAL_RESULT GROUP BY BAIN_GRADE_YM
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,TO_CHAR(ADD_MONTHS(BAIN_GRADE_YM,1),'YYYYMMDD') AS YM_WCNT,'POTENTIAL'AS MODULE,'PREDICT_PROB_AF3M' AS DNA_CD,SUM(CASE WHEN PREDICT_PROB_AF3M IS NOT NULL THEN 1 ELSE 0 END)  AS DEC_VALUE  FROM CDS_AMT.TB_AMT_POTENTIAL_RESULT GROUP BY BAIN_GRADE_YM
UNION ALL SELECT 'MONTHLY'AS BATCH_CYCLE,TO_CHAR(ADD_MONTHS(BAIN_GRADE_YM,1),'YYYYMMDD') AS YM_WCNT,'POTENTIAL'AS MODULE,'PREDICT_PROB_GROUP' AS DNA_CD,SUM(CASE WHEN PREDICT_PROB_GROUP IS NOT NULL THEN 1 ELSE 0 END)  AS DEC_VALUE  FROM CDS_AMT.TB_AMT_POTENTIAL_RESULT GROUP BY BAIN_GRADE_YM
)
SELECT *
FROM MONTHLY_MODULE_CD_COMB_TEST
WHERE 1=1
AND YM_WCNT IN ('20200901') -- 기준 일자 입력 