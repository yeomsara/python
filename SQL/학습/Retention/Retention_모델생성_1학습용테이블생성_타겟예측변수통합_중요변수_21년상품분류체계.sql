/*모델 대상 : 20년 5월 Bain등급 보유 고객*/
/*DNA 기준일자 : 2020-06-01 , Bain 기준월 : 202005, 영수증 증감 비교 : 20년 3~5월과 20년 6~8월 누계 고객 실적 및 해당 기간 이탈여부*/
--DROP TABLE CDS_AMT.TB_AMT_RETENTION_TRAIN_202005				
CREATE COLUMN TABLE CDS_AMT.TB_AMT_RETENTION_TRAIN_:YM_BAIN 				
(				
	BAIN_GRADE_YM	NVARCHAR(6)	NOT NULL  COMMENT	'베인등급 기준연월'
,	DNA_YM_WCNT	NVARCHAR(10)	NOT NULL  COMMENT	'DNA 기준연월'
,	CUST_ID	NVARCHAR(20)	NOT NULL  COMMENT	'고객번호'
,	TARGET_YN	TINYINT	NOT NULL  COMMENT	'이탈 예측 대상 여부(Y=1, N=0), 베인등급 기준 우수(loyal,potential)-직전분기대비 50%이상 구매액 하락 또는 등급하락, 일반(Average,Spradic)-3개월 구매없는 휴면인 경우 1'
,	BAIN_GRADE_CD	NVARCHAR(2)	NOT NULL  COMMENT	'회원등급_베인등급 코드'
,	GRADE_NM	NVARCHAR(100)	COMMENT	'회원등급_베인등급 이름'
,	BAIN_GRADE_CD_AF1M	NVARCHAR(2)	COMMENT	'베인등급 1개월 후'
,	BAIN_GRADE_CD_AF2M	NVARCHAR(2)	COMMENT	'베인등급 2개월 후'
,	BAIN_GRADE_CD_AF3M	NVARCHAR(2)	COMMENT	'베인등급 3개월 후'
,	LV_CHG_CAT	NVARCHAR(3)	COMMENT	'베인등급 변화 유형상세'
,	LV_CHG_G	NVARCHAR(10)	COMMENT	'베인등급 변화 유형그룹(3개월 동안 기준 등급월 대비 등급 변화, 하락이 1회 이상 경우 하락, 하락 이력 없이 1회 이상 상승 시 상승, 그 외 유지)'
,	SALE_AMT_DIFF_GRADE	NVARCHAR(2)	COMMENT	'구매금액 변화율_A(25%미만하락)/B(25~50%미만하락)/C(50~75%미만하락)/D(75~100%하락)/E(구매없음)/X(상승 또는 유지)'
,	AGE	SMALLINT	COMMENT	'연령'
,	LSTAGE_GROUP	NVARCHAR(10)	COMMENT	'라이프스테이지 코드'
,	LSTAGE_NM	NVARCHAR(100)	COMMENT	'라이프 스테이지 명'
,	FRST_PARTY_ELAPSE	SMALLINT	COMMENT	'회원 가입경과일'
,	GRADE_EMART_001_01	NVARCHAR(2)	COMMENT	'회원등급_이마트 업태'
,	USEFL_POINT_EX	DECIMAL(30)	COMMENT	'신세계포인트 잔액(산출시점 기준 환산)'
,	POINT_SAVE_6M	DECIMAL(30)	COMMENT	'신세계포인트 6개월간 적립액'
,	PURCHS_CYCLE_CHG	DECIMAL(30,6)	COMMENT	'구매주기 변동성'
,	DAVG_PURCHS_AMT_CHG	DECIMAL(30,6)	COMMENT	'회당 객단가 변동성'
,	PURCHS_CYCLE_ELAPSE_OFF_BIZTP	SMALLINT	COMMENT	'타업태이용실적_오프라인전체_구매경과일'
,	ORD_4QTY	TINYINT	COMMENT	'연간 분기별 구매여부 합계(최대4)'
,	PURCHS_CYCLE_ELAPSE	SMALLINT	COMMENT	'구매경과일'
,	CNT_TOT_6M	DECIMAL(30)	COMMENT	'구매횟수 6개월 합계'
,	CNT_DIFF_Q1_Q2	DECIMAL(30)	COMMENT	'구매횟수 증감(최근3개월과 4~6개월전 비교)'
,	CNT_DIFF_Q2_Q3	DECIMAL(30)	COMMENT	'구매횟수 증감(4~6개월전과 7~9개월전 비교)'
,	CNT_DIFF_Q3_Q4	DECIMAL(30)	COMMENT	'구매횟수 증감(7~9개월전과 10~12개월전 비교)'
,	DAVG_AMT_DIFF_Q1_Q2	DECIMAL(30,3)	COMMENT	'회당객단가 증감(4~6개월전과 7~9개월전 비교)'
,	DAVG_AMT_DIFF_Q2_Q3	DECIMAL(30,3)	COMMENT	'회당객단가 증감(4~6개월전과 7~9개월전 비교)'
,	DAVG_AMT_DIFF_Q3_Q4	DECIMAL(30,3)	COMMENT	'회당객단가 증감(7~9개월전과 10~12개월전 비교)'
,	DAVG_AMT_RT_Q1_Q2	DECIMAL(30,6)	COMMENT	'회당객단가 증감율(최근3개월과 4~6개월전 비교)'
,	DAVG_AMT_RT_Q2_Q3	DECIMAL(30,6)	COMMENT	'회당객단가 증감율(4~6개월전과 7~9개월전 비교)'
,	DAVG_AMT_RT_Q3_Q4	DECIMAL(30,6)	COMMENT	'회당객단가 증감율(7~9개월전과 10~12개월전 비교)'
,	PURCHS_CYCLE_ELAPSE_LV1_10	SMALLINT	COMMENT	'구매경과일(신선1담당)'
,	PURCHS_CYCLE_ELAPSE_LV1_11	SMALLINT	COMMENT	'구매경과일(신선2담당)'
,	PURCHS_CYCLE_ELAPSE_LV1_30	SMALLINT	COMMENT	'구매경과일(가공담당)'
,	PURCHS_CYCLE_ELAPSE_LV1_40	SMALLINT	COMMENT	'구매경과일(헬스&일상담당)'
,	PURCHS_CYCLE_ELAPSE_LV1_41	SMALLINT	COMMENT	'구매경과일(리빙담당)'
,	PURCHS_CYCLE_ELAPSE_LV1_50	SMALLINT	COMMENT	'구매경과일(가전문화담당)'
,	PURCHS_CYCLE_ELAPSE_LV1_60	SMALLINT	COMMENT	'구매경과일(패션사업부)'
,	PURCHS_CYCLE_ELAPSE_LV1_70	SMALLINT	COMMENT	'구매경과일(기타)'
,	CNT_LV1_10_TOT	DECIMAL(30)	COMMENT	'구매횟수 6개월 합계(신선1담당)'
,	CNT_LV1_20_TOT	DECIMAL(30)	COMMENT	'구매횟수 6개월 합계(피코크담당)'
,	CNT_LV1_30_TOT	DECIMAL(30)	COMMENT	'구매횟수 6개월 합계(가공담당)'
,	CNT_LV1_40_TOT	DECIMAL(30)	COMMENT	'구매횟수 6개월 합계(헬스&일상담당)'
,	CNT_LV1_70_TOT	DECIMAL(30)	COMMENT	'구매횟수 6개월 합계(기타)'
,	DAVG_AMT_LV1_50_RT	DECIMAL(30,6)	COMMENT	'회당객단가 증감율(최근DNA와 3개월전 DNA비교)(가전문화담당)'
				
, 	CONSTRAINT TB_AMT_RETENTION_TRAIN_:YM_BAIN  PRIMARY KEY (BAIN_GRADE_YM,DNA_YM_WCNT,CUST_ID,BAIN_GRADE_CD)
)
UNLOAD PRIORITY 5 AUTO MERGE COMMENT '(분석마트)Retention모델 월별 고객이탈예측학습테이블' 				


--DELETE FROM  TB_AMT_RETENTION_TRAIN WHERE BAIN_GRADE_YM=:YM_BAIN
--CREATE TABLE TB_AMT_RETENTION_TRAIN_:YM_BAIN  AS
--TRUNCATE TABLE  TB_AMT_RETENTION_TRAIN_202005


INSERT INTO   TB_AMT_RETENTION_TRAIN_:YM_BAIN 
(WITH  
RETENTION_TARGET1 AS(
SELECT 
--T2.*,
:YM_BAIN AS BAIN_GRADE_YM
,T2.CUST_ID  
,T2.GRADE_CD AS BAIN_GRADE_CD 
,T2.GRADE_CD_AF1M AS BAIN_GRADE_CD_AF1M
,T2.GRADE_CD_AF2M AS BAIN_GRADE_CD_AF2M
,T2.GRADE_CD_AF3M AS BAIN_GRADE_CD_AF3M

--LV_CHG_CAT1_CAT2_M1||LV_CHG_CAT1_M2||LV_CHG_CAT1_M3 AS CHG_CAT1,

,LV_CHG_CAT1_CAT2_M1||LV_CHG_CAT2_M2||LV_CHG_CAT2_M3 AS LV_CHG_CAT

--CASE WHEN   LV_DWGRADE_CNT_0M_base > 0  THEN 1 ELSE 0  END AS LV_DWGRADE_YN,

--CASE WHEN   LV_DWGRADE_CNT_0M_base = 0 AND LV_UPGRADE_CNT_0M_base > 0  THEN 1 ELSE 0  END AS LV_UPGRADE_YN,

,CASE WHEN  LV_DWGRADE_CNT_0M_base > 0  THEN '1하락'
     WHEN  LV_UPGRADE_CNT_0M_base > 0  THEN '2상승' ELSE '3유지' END AS LV_CHG_G
     
,CASE WHEN  LV_DWGRADE_CNT_0M_base > 0  THEN 1
ELSE 0  END AS TARGET_YN_GRADE



FROM ( SELECT
	T1.CUST_ID ,
	T1.GRADE_CD ,
	T1.GRADE_CD_AF1M ,
	T1.GRADE_CD_AF2M ,
	T1.GRADE_CD_AF3M , 
	
--	T1.GRADE_LV_DIFF_0M_AF1M ,
--	T1.GRADE_LV_DIFF_AF1M_AF2M ,
--          T1.GRADE_LV_DIFF_AF2M_AF3M ,
--    
--	T1.GRADE_LV_DIFF_0M_AF2M ,
--          T1.GRADE_LV_DIFF_0M_AF3M ,    
    
	(CASE
		WHEN T1.GRADE_LV_DIFF_0M_AF1M > 0 THEN '+' WHEN T1.GRADE_LV_DIFF_0M_AF1M = 0 THEN '0'
		ELSE '-'
	END) AS LV_CHG_CAT1_CAT2_M1 ,
--	(CASE
--		WHEN T1.GRADE_LV_DIFF_AF1M_AF2M > 0 THEN '+' WHEN T1.GRADE_LV_DIFF_AF1M_AF2M = 0 THEN '0'
--		ELSE '-'
--	END) AS LV_CHG_CAT1_M2 ,
--	(CASE
--		WHEN T1.GRADE_LV_DIFF_AF2M_AF3M > 0 THEN '+'  WHEN T1.GRADE_LV_DIFF_AF2M_AF3M = 0 THEN '0'
--		ELSE '-'
--	END) AS LV_CHG_CAT1_M3,
	
	(CASE
		WHEN T1.GRADE_LV_DIFF_0M_AF2M > 0 THEN '+' WHEN T1.GRADE_LV_DIFF_AF1M_AF2M = 0 THEN '0'
		ELSE '-'
	END) AS LV_CHG_CAT2_M2 ,
	(CASE
		WHEN T1.GRADE_LV_DIFF_0M_AF3M > 0 THEN '+'  WHEN T1.GRADE_LV_DIFF_AF2M_AF3M = 0 THEN '0'
		ELSE '-'
	END) AS LV_CHG_CAT2_M3,	
	
	
--	(CASE
--		WHEN T1.GRADE_LV_DIFF_0M_AF1M > 0 THEN 1
--		ELSE 0
--	END )+
--	(CASE
--		WHEN T1.GRADE_LV_DIFF_AF1M_AF2M > 0 THEN 1
--		ELSE 0
--	END )+
--	(CASE
--		WHEN T1.GRADE_LV_DIFF_AF2M_AF3M > 0 THEN 1
--		ELSE 0
--	END ) AS LV_UPGRADE_CNT_TOT,
--	
--	
--	(CASE
--		WHEN T1.GRADE_LV_DIFF_0M_AF1M < 0 THEN 1
--		ELSE 0
--	END )+
--	(CASE
--		WHEN T1.GRADE_LV_DIFF_AF1M_AF2M < 0 THEN 1
--		ELSE 0
--	END )+
--	(CASE
--		WHEN T1.GRADE_LV_DIFF_AF2M_AF3M < 0 THEN 1
--		ELSE 0
--	END ) AS LV_DWGRADE_CNT_TOT,
	
	
	
	(CASE
		WHEN T1.GRADE_LV_DIFF_0M_AF1M > 0 THEN 1
		ELSE 0
	END ) +
	(CASE
		WHEN T1.GRADE_LV_DIFF_0M_AF2M > 0  THEN 1
		ELSE 0
	END )+
	(CASE
		WHEN T1.GRADE_LV_DIFF_0M_AF3M > 0 THEN 1
		ELSE 0
	END ) AS LV_UPGRADE_CNT_0M_base,
	
	
	(CASE
		WHEN T1.GRADE_LV_DIFF_0M_AF1M < 0 THEN 1
		ELSE 0
	END )+
	(CASE
		WHEN T1.GRADE_LV_DIFF_0M_AF2M < 0 THEN 1
		ELSE 0
	END )+
	(CASE
		WHEN T1.GRADE_LV_DIFF_0M_AF3M < 0 THEN 1
		ELSE 0
	END ) AS LV_DWGRADE_CNT_0M_base
	
FROM (
		SELECT  
				  a.CUST_ID
		        , GRADE_CD  /* 비교 기준 베인등급월 1: loyal 2 : potential 3 :average 4: sporadic */
		        , (GRADE_CD_AF1M) AS GRADE_CD_AF1M
		        , (GRADE_CD_AF2M) AS GRADE_CD_AF2M
		        , (GRADE_CD_AF3M) AS GRADE_CD_AF3M
		        
		        
		        , (GRADE_CD - GRADE_CD_AF1M) AS GRADE_LV_DIFF_0M_AF1M /*기준월과 1개월 후  베인등급 차이 */
		        , (GRADE_CD_AF1M - GRADE_CD_AF2M) AS GRADE_LV_DIFF_AF1M_AF2M /*1개월 후와 2개월 후  베인등급 차이 */
		        , (GRADE_CD_AF2M - GRADE_CD_AF3M) AS GRADE_LV_DIFF_AF2M_AF3M /*2개월 후와 3개월 후  베인등급 차이 */
		        
		        , (GRADE_CD - GRADE_CD_AF2M) AS GRADE_LV_DIFF_0M_AF2M /*기준월과 2개월 후  베인등급 차이 */
                , (GRADE_CD - GRADE_CD_AF3M) AS GRADE_LV_DIFF_0M_AF3M /*기준월과 3개월 후  베인등급 차이 */
 
		 FROM (SELECT A2.CUST_ID FROM CDS_DW.TB_BAIN_MEMBR_GRADE a1 JOIN  CDS_AMT.TB_AMT_BIZTP_CUST_DNA_DATA a2 
		 ON a1.CUST_ID=a2.CUST_ID AND a2.AFLCO_CD ='001' AND a2.BIZTP_CD ='10' AND TO_CHAR(a2.YM_WCNT ,'YYYYMMDD')= CONCAT( TO_CHAR(ADD_MONTHS(:YM_BAIN,+1),'YYYYMM'),'01')  AND a1.GRADE_YM=:YM_BAIN ) a, 
		 (SELECT CUST_ID 
				   ,COALESCE(MAX(CASE WHEN  GRADE_YM = to_char(ADD_MONTHS(:YM_BAIN , +0),'YYYYMM') 
						THEN to_integer(GRADE_CD) END) ,5) AS GRADE_CD 
				   ,COALESCE(MAX(CASE WHEN GRADE_YM = to_char(ADD_MONTHS(:YM_BAIN , +1),'YYYYMM') 
						THEN to_integer(GRADE_CD) END) ,5) AS GRADE_CD_AF1M
				   ,COALESCE(MAX(CASE WHEN GRADE_YM = to_char(ADD_MONTHS(:YM_BAIN , +2),'YYYYMM') 
						THEN  to_integer(GRADE_CD) END),5) AS GRADE_CD_AF2M
				   ,COALESCE(MAX(CASE WHEN GRADE_YM = to_char(ADD_MONTHS(:YM_BAIN , +3),'YYYYMM')
						THEN  to_integer(GRADE_CD) END),5) AS GRADE_CD_AF3M
			FROM  CDS_DW.TB_BAIN_MEMBR_GRADE 
			  WHERE  GRADE_YM  >= to_char(ADD_MONTHS(:YM_BAIN ,+0),'YYYYMM') 
			  AND GRADE_YM <= to_char(ADD_MONTHS(:YM_BAIN , +3),'YYYYMM') 
			GROUP BY CUST_ID ) b WHERE  a.CUST_ID=b.CUST_ID
	 
	) T1 ) T2 
  ),

RETENTION_TARGET2 AS (
SELECT   
		T1.BAIN_GRADE_YM
		,T1.CUST_ID
		,T1.BAIN_GRADE_CD
		,T1.SALE_AMT_DIFF_GRADE
--      ,T1.SALE_FREQUENCY_DIFF_GRADE
--		,CASE WHEN BAIN_GRADE_CD IN ('1','2') AND  T1.SALE_AMT_DIFF_GRADE IN ('C','D','E') AND  T1.SALE_FREQUENCY_DIFF_GRADE IN ('C','D','E')  THEN 1
--		WHEN BAIN_GRADE_CD IN ('3','4') AND  T1.SALE_AMT_DIFF_GRADE IN ('E') THEN 1
--		ELSE 0 END AS TARGET_YN
--		,CASE WHEN BAIN_GRADE_CD IN ('1','2') AND (T1.SALE_AMT_DIFF_GRADE IN ('C','D','E') or  T1.SALE_FREQUENCY_DIFF_GRADE IN ('C','D','E') ) THEN 1
--		WHEN BAIN_GRADE_CD IN ('3','4') AND  T1.SALE_AMT_DIFF_GRADE IN ('E') THEN 1
--		ELSE 0 END AS TARGET_YN_CNT_AMT
--		,CASE WHEN BAIN_GRADE_CD IN ('1','2') AND T1.SALE_FREQUENCY_DIFF_GRADE IN ('C','D','E')  THEN 1
--		WHEN BAIN_GRADE_CD IN ('3','4') AND  T1.SALE_AMT_DIFF_GRADE IN ('E') THEN 1
--		ELSE 0 END AS TARGET_YN_CNT
		,CASE WHEN T1.BAIN_GRADE_CD IN ('1','2') AND T1.SALE_AMT_DIFF_GRADE IN ('C','D','E')  THEN 1
		WHEN T1.BAIN_GRADE_CD IN ('3','4') AND  T1.SALE_AMT_DIFF_GRADE IN ('E') THEN 1
		ELSE 0 END AS TARGET_YN_AMT
		
FROM (
		SELECT 
		   	     B.CUST_ID
		       , B.BAIN_GRADE_CD  
		       , B.BAIN_GRADE_YM
--			   , SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_SALE_AMT END) AS PAST_3M_SALE_AMT
--		       , SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_SALE_AMT END) AS RECENT_3M_SALE_AMT
--		       , CASE 
--			     WHEN SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_SALE_AMT END) IS NOT NULL AND SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_SALE_AMT END) IS NULL
--			     THEN -101
--			     WHEN SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_SALE_AMT END) IS NULL AND SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_SALE_AMT END)IS NOT NULL
--			     THEN 101
--			     ELSE ROUND((SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_SALE_AMT END) - SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_SALE_AMT END)) 
--		                   / SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_SALE_AMT END) * 100,0)
--			      END  AS SALE_AMT_DIFF_RT
			   , CASE 
			     WHEN ROUND((SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_SALE_AMT END) - SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_SALE_AMT END)) 
		                   / SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_SALE_AMT END) * 100,0) BETWEEN -25 AND -1 
			     THEN 'A'
			     WHEN ROUND((SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_SALE_AMT END) - SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_SALE_AMT END)) 
		                   / SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_SALE_AMT END) * 100,0) BETWEEN -50 AND -26 
			     THEN 'B'
			     WHEN ROUND((SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_SALE_AMT END) - SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_SALE_AMT END)) 
		                   / SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_SALE_AMT END) * 100,0) BETWEEN -75 AND -51 
			     THEN 'C'
			     WHEN ROUND((SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_SALE_AMT END) - SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_SALE_AMT END)) 
		                   / SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_SALE_AMT END) * 100,0) BETWEEN -100 AND -76 
			     THEN 'D'
			     WHEN SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_SALE_AMT END) IS NOT NULL AND SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_SALE_AMT END) IS NULL
			     THEN 'E'
			     
			     WHEN SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_SALE_AMT END) IS NULL AND SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_SALE_AMT END) IS NULL
			     THEN 'E'
			     			     
			     ELSE 'X'
			      END AS SALE_AMT_DIFF_GRADE   
--			   , SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_FREQUENCY_CNT END) AS PAST_3M_FREQUENCY_CNT
--		       , SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_FREQUENCY_CNT END) AS RECENT_3M_FREQUENCY_CNT
--		       , CASE 
--			     WHEN SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_FREQUENCY_CNT END) IS NOT NULL AND SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_FREQUENCY_CNT END) IS NULL
--			     THEN -101
--			     WHEN SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_FREQUENCY_CNT END) IS NULL AND SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_FREQUENCY_CNT END) IS NOT NULL
--			     THEN 101
--			     ELSE ROUND((SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_FREQUENCY_CNT END) - SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_FREQUENCY_CNT END)) 
--		                    / SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_FREQUENCY_CNT END) * 100,0)
--			      END  AS FREQUENCY_CNT_DIFF_RT
--			   , CASE 
--			     WHEN ROUND((SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_FREQUENCY_CNT END) - SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_FREQUENCY_CNT END)) 
--		                    / SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_FREQUENCY_CNT END) * 100,0) BETWEEN -25 AND -1 
--			     THEN 'A'
--			     WHEN ROUND((SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_FREQUENCY_CNT END) - SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_FREQUENCY_CNT END)) 
--		                    / SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_FREQUENCY_CNT END) * 100,0) BETWEEN -50 AND -26 
--			     THEN 'B'
--			     WHEN ROUND((SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_FREQUENCY_CNT END) - SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_FREQUENCY_CNT END)) 
--		                    / SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_FREQUENCY_CNT END) * 100,0) BETWEEN -75 AND -51 
--			     THEN 'C'
--			     WHEN ROUND((SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_FREQUENCY_CNT END) - SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_FREQUENCY_CNT END)) 
--		                    / SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_FREQUENCY_CNT END) * 100,0) BETWEEN -100 AND -76 
--			     THEN 'D'
--			     WHEN SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_FREQUENCY_CNT END) IS NOT NULL AND SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_FREQUENCY_CNT END) IS NULL
--			     THEN 'E'
--			     WHEN SUM(CASE WHEN A.YM_CAT = 'P' THEN TOT_FREQUENCY_CNT END) IS NULL AND SUM(CASE WHEN A.YM_CAT = 'R' THEN TOT_FREQUENCY_CNT END) IS NULL
--			     THEN 'E'
--			     ELSE 'X'
--			     END AS SALE_FREQUENCY_DIFF_GRADE    
		FROM  (
		       SELECT CUST_ID, BAIN_GRADE_CD , BAIN_GRADE_YM   
		       FROM RETENTION_TARGET1 
		     )  B  LEFT	JOIN
		     ( SELECT      CUST_ID 
						   , CASE WHEN TO_CHAR(BSN_DT,'YYYYMM')  BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN,-0),'YYYYMM') THEN 'P' 
					              WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN,+1),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN,+3),'YYYYMM') THEN'R'
					         END  AS YM_CAT
					       , SUM(SALE_SUM_AMT) AS  TOT_SALE_AMT
					       , count(DISTINCT BSN_DT) AS TOT_FREQUENCY_CNT 
				FROM  CDS_DW.TB_DW_RCIPT_HDER 
				WHERE  TO_CHAR( BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN, +3),'YYYYMM')
		  AND   BIZTP_CD        = '10'
		  --AND  A.SALE_TRGT_YN    = 'Y'               
		  AND   RL_SALE_TRGT_YN = 'Y'               
		  AND  SALE_SUM_AMT > 0 AND CUST_ID IS NOT NULL 
		GROUP BY CUST_ID, 
				CASE WHEN TO_CHAR(BSN_DT,'YYYYMM')  BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN,-0),'YYYYMM') THEN 'P' 
				     WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN,+1),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN,+3),'YYYYMM') THEN'R' END
		     )  A
	ON B.CUST_ID = A.CUST_ID 
		GROUP BY B.CUST_ID, B.BAIN_GRADE_CD, B.BAIN_GRADE_YM
  ) T1  ) ,

RCIPT_DETAIL AS  (
 SELECT
  B.CUST_ID
 ,A.BSN_DT 
-- ,A.PRDT_CD
-- ,C.PRDT_DCODE_CD
 ,D.PRDT_DI_CD
, sum(A.SALE_AMT)  AS SALE_AMT
		 FROM  (SELECT CUST_ID FROM RETENTION_TARGET1 ) B 
		 JOIN CDS_DW.TB_DW_RCIPT_DETAIL A ON B.CUST_ID=A.CUST_ID
		 JOIN (SELECT PRDT_CD , PRDT_DCODE_CD
		       FROM CDS_DW.TB_DW_PRDT_MASTR 
		       WHERE AFLCO_CD = '001' AND BIZTP_CD = '10') C ON A.PRDT_CD  = C.PRDT_CD
		 JOIN (SELECT PRDT_DCODE_CD,PRDT_DI_CD
		   	   FROM CDS_DW.TB_DW_PRDT_DCODE_CD
		   	   WHERE AFLCO_CD = '001' AND BIZTP_CD = '10') D ON C.PRDT_DCODE_CD  = D.PRDT_DCODE_CD 
		 WHERE TO_CHAR( BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN, +0),'YYYYMM')
		   AND A.AFLCO_CD ='001' 
		   AND A.BIZTP_CD ='10'
		   AND A.SALE_TRGT_YN    = 'Y'               
		   AND A.RL_SALE_TRGT_YN = 'Y'               
		   AND A.SALE_AMT > 0
		   AND A.CUST_ID IS NOT NULL
		   GROUP BY 
		   B.CUST_ID
		  ,A.BSN_DT
		--,A.PRDT_CD
		--,C.PRDT_DCODE_CD
		  ,D.PRDT_DI_CD
		  ), 

RCIPT_SUMMARY_1Y AS (
SELECT
CUST_ID,
CASE WHEN COALESCE(CNT_Q1,0) > 0  THEN 1 ELSE 0 END AS ORD_Q1_YN ,
COALESCE(CNT_Q1/NULLIF(CNT_Q1,0),0) + COALESCE(CNT_Q2/NULLIF(CNT_Q2,0),0) + COALESCE(CNT_Q3/NULLIF(CNT_Q3,0),0) + COALESCE(CNT_Q4/NULLIF(CNT_Q4,0),0) AS ORD_4QTY,
CASE WHEN
	COALESCE(CNT_Q1,0) > 0
			THEN 10+COALESCE(CNT_Q1/NULLIF(CNT_Q1,0),0) + COALESCE(CNT_Q2/NULLIF(CNT_Q2,0),0)  + COALESCE(CNT_Q3/NULLIF(CNT_Q3,0),0) + COALESCE(CNT_Q4/NULLIF(CNT_Q4,0),0) 
	ELSE
			COALESCE(CNT_Q1/NULLIF(CNT_Q1,0),0) + COALESCE(CNT_Q2/NULLIF(CNT_Q2,0),0)  + COALESCE(CNT_Q3/NULLIF(CNT_Q3,0),0) + COALESCE(CNT_Q4/NULLIF(CNT_Q4,0),0) 
	END AS ORD_4QTY_GRADE,

COALESCE(CNT_Q1,0)-COALESCE(CNT_Q2,0) AS CNT_DIFF_Q1_Q2 ,
COALESCE(CNT_Q2,0)-COALESCE(CNT_Q3,0) AS CNT_DIFF_Q2_Q3 ,
COALESCE(CNT_Q3,0)-COALESCE(CNT_Q4,0) AS CNT_DIFF_Q3_Q4 ,


CASE WHEN COALESCE(CNT_Q1,0) > 0 AND COALESCE(CNT_Q2,0)=0 THEN 1 ELSE COALESCE(COALESCE(CNT_Q1,0)/NULLIF(CNT_Q2,0) - 1,0) END AS CNT_RT_Q1_Q2 ,
CASE WHEN COALESCE(CNT_Q2,0) > 0 AND COALESCE(CNT_Q3,0)=0 THEN 1 ELSE COALESCE(COALESCE(CNT_Q2,0)/NULLIF(CNT_Q3,0) - 1,0) END AS CNT_RT_Q2_Q3 ,
CASE WHEN COALESCE(CNT_Q3,0) > 0 AND COALESCE(CNT_Q4,0)=0 THEN 1 ELSE COALESCE(COALESCE(CNT_Q3,0)/NULLIF(CNT_Q4,0) - 1,0) END AS CNT_RT_Q3_Q4 ,


 COALESCE(AMT_Q1/NULLIF(CNT_Q1,0),0)-COALESCE(CNT_Q2/NULLIF(CNT_Q2,0),0)   AS DAVG_AMT_DIFF_Q1_Q2  
,COALESCE(AMT_Q2/NULLIF(CNT_Q2,0),0)-COALESCE(AMT_Q3/NULLIF(CNT_Q3,0),0)   AS DAVG_AMT_DIFF_Q2_Q3 
,COALESCE(AMT_Q3/NULLIF(CNT_Q3,0),0)-COALESCE(AMT_Q4/NULLIF(CNT_Q4,0),0)   AS DAVG_AMT_DIFF_Q3_Q4 


,CASE WHEN COALESCE(AMT_Q1/NULLIF(CNT_Q1,0),0) > 0 AND COALESCE(AMT_Q2/NULLIF(CNT_Q2,0),0)=0 THEN 1 ELSE  COALESCE(COALESCE(AMT_Q2/NULLIF(CNT_Q1,0),0)/(AMT_Q2/NULLIF(CNT_Q2,0)) - 1,0) END AS DAVG_AMT_RT_Q1_Q2  
,CASE WHEN COALESCE(AMT_Q2/NULLIF(CNT_Q2,0),0) > 0 AND COALESCE(AMT_Q3/NULLIF(CNT_Q3,0),0)=0 THEN 1 ELSE  COALESCE(COALESCE(AMT_Q3/NULLIF(CNT_Q2,0),0)/(AMT_Q3/NULLIF(CNT_Q3,0)) - 1,0) END AS DAVG_AMT_RT_Q2_Q3  
,CASE WHEN COALESCE(AMT_Q3/NULLIF(CNT_Q3,0),0) > 0 AND COALESCE(AMT_Q4/NULLIF(CNT_Q4,0),0)=0 THEN 1 ELSE  COALESCE(COALESCE(AMT_Q3/NULLIF(CNT_Q3,0),0)/(AMT_Q4/NULLIF(CNT_Q4,0)) - 1,0) END AS DAVG_AMT_RT_Q3_Q4 

, COALESCE(CNT_Q1,0) AS CNT_Q1
, COALESCE(CNT_Q2,0) AS CNT_Q2
--, COALESCE(CNT_Q3,0) AS CNT_Q3
--, COALESCE(CNT_Q4,0) AS CNT_Q4

--AMT_Q1/NULLIF(CNT_Q1,0) AS  avg_3M, AMT_Q2/NULLIF(CNT_Q2,0) AS  avg_6M,  AMT_Q3/NULLIF(CNT_Q3,0) AS  avg_9M,  AMT_Q4/NULLIF(CNT_Q4,0) AS  avg_12M 

FROM ( 
SELECT
--B.CUST_ID, 
CUST_ID,
COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') THEN BSN_DT ELSE NULL END) AS CNT_Q1, 

COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') THEN BSN_DT ELSE NULL END) AS CNT_Q2,

COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-8),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-6),'YYYYMM') THEN BSN_DT ELSE NULL END) AS CNT_Q3,

COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-11),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-9),'YYYYMM') THEN BSN_DT ELSE NULL END) AS CNT_Q4,

sum(CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') THEN SALE_AMT ELSE 0 END) AS AMT_Q1, 

sum(CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') THEN SALE_AMT ELSE 0 END) AS  AMT_Q2,

sum(CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-8),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-6),'YYYYMM') THEN SALE_AMT ELSE 0 END) AS  AMT_Q3,

sum(CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-11),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-9),'YYYYMM') THEN SALE_AMT ELSE 0 END) AS  AMT_Q4
FROM
(
(SELECT   CUST_ID, BSN_DT , sum(SALE_AMT)  AS SALE_AMT FROM RCIPT_DETAIL  GROUP BY CUST_ID, BSN_DT)
UNION 
(SELECT B.CUST_ID, A.BSN_DT, sum(A.SALE_AMT)  AS SALE_AMT
		 FROM  (SELECT CUST_ID FROM RETENTION_TARGET1 ) B 
		 JOIN CDS_DW.TB_DW_RCIPT_DETAIL A ON B.CUST_ID=A.CUST_ID
		 WHERE TO_CHAR( BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN,-11),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN, -6),'YYYYMM')
		   AND A.AFLCO_CD ='001' 
		   AND A.BIZTP_CD ='10'
		   AND A.SALE_TRGT_YN    = 'Y'               
		   AND A.RL_SALE_TRGT_YN = 'Y'               
		   AND A.SALE_AMT > 0
		   AND A.CUST_ID IS NOT NULL
		   GROUP BY 
		   B.CUST_ID
		  ,A.BSN_DT)
) GROUP BY CUST_ID)
),  

OTH_CH_USE1 AS ( 
SELECT
t1.CUST_ID,
--CASE WHEN  PURCHS_CYCLE_ELAPSE_20TRD IS NOT NULL THEN 1 ELSE NULL END AS OTH_CH_USE_20TRD_YN,
--OTH_CH_DAVG_AMT_20TRD,
--OTH_CH_DAVG_AMT_20TRD_EX,
--PURCHS_CYCLE_ELAPSE_20TRD,
--CASE WHEN COALESCE(OTH_CH_DAVG_AMT_20TRD,0) > 0 AND COALESCE(OTH_CH_DAVG_AMT_20TRD_EX,0)=0 THEN 1 ELSE COALESCE(OTH_CH_DAVG_AMT_20TRD,0)/NULLIF(OTH_CH_DAVG_AMT_20TRD_EX,0) - 1 END AS OTH_CH_DAVG_AMT_20TRD_RT,
--
--CASE WHEN  PURCHS_CYCLE_ELAPSE_40NOB IS NOT NULL THEN 1 ELSE NULL END AS OTH_CH_USE_40NOB_YN,
--OTH_CH_DAVG_AMT_40NOB,
--OTH_CH_DAVG_AMT_40NOB_EX,
--PURCHS_CYCLE_ELAPSE_40NOB,
--CASE WHEN COALESCE(OTH_CH_DAVG_AMT_40NOB,0) > 0 AND COALESCE(OTH_CH_DAVG_AMT_40NOB_EX,0)=0 THEN 1 ELSE COALESCE(OTH_CH_DAVG_AMT_40NOB,0)/NULLIF(OTH_CH_DAVG_AMT_40NOB_EX,0) - 1 END AS OTH_CH_DAVG_AMT_40NOB_RT,
--
--
--CASE WHEN  PURCHS_CYCLE_ELAPSE_41PKM IS NOT NULL THEN 1 ELSE NULL END AS OTH_CH_USE_41PKM_YN,
--OTH_CH_DAVG_AMT_41PKM,
--OTH_CH_DAVG_AMT_41PKM_EX,
--PURCHS_CYCLE_ELAPSE_41PKM,
--CASE WHEN COALESCE(OTH_CH_DAVG_AMT_41PKM,0) > 0 AND COALESCE(OTH_CH_DAVG_AMT_41PKM_EX,0)=0 THEN 1 ELSE COALESCE(OTH_CH_DAVG_AMT_41PKM,0)/NULLIF(OTH_CH_DAVG_AMT_41PKM_EX,0) - 1 END AS OTH_CH_DAVG_AMT_41PKM_RT,


--1 AS OTH_CH_USE_OFF_BIZTP_YN, 
CASE WHEN  PURCHS_CYCLE_ELAPSE_40NOB IS NULL AND PURCHS_CYCLE_ELAPSE_41PKM IS NULL THEN PURCHS_CYCLE_ELAPSE_20TRD
     WHEN  PURCHS_CYCLE_ELAPSE_20TRD IS NULL AND PURCHS_CYCLE_ELAPSE_41PKM IS NULL THEN PURCHS_CYCLE_ELAPSE_40NOB
     WHEN  PURCHS_CYCLE_ELAPSE_20TRD IS NULL AND PURCHS_CYCLE_ELAPSE_40NOB IS NULL THEN PURCHS_CYCLE_ELAPSE_41PKM

     WHEN PURCHS_CYCLE_ELAPSE_20TRD <=  PURCHS_CYCLE_ELAPSE_41PKM AND  PURCHS_CYCLE_ELAPSE_20TRD <=  PURCHS_CYCLE_ELAPSE_40NOB   THEN PURCHS_CYCLE_ELAPSE_20TRD
     WHEN PURCHS_CYCLE_ELAPSE_40NOB <=  PURCHS_CYCLE_ELAPSE_20TRD AND  PURCHS_CYCLE_ELAPSE_40NOB <=  PURCHS_CYCLE_ELAPSE_41PKM   THEN PURCHS_CYCLE_ELAPSE_40NOB
     WHEN PURCHS_CYCLE_ELAPSE_41PKM <=  PURCHS_CYCLE_ELAPSE_40NOB AND  PURCHS_CYCLE_ELAPSE_41PKM <=  PURCHS_CYCLE_ELAPSE_20TRD   THEN PURCHS_CYCLE_ELAPSE_41PKM
     
     
     WHEN PURCHS_CYCLE_ELAPSE_41PKM IS NULL AND PURCHS_CYCLE_ELAPSE_20TRD <= PURCHS_CYCLE_ELAPSE_40NOB   THEN PURCHS_CYCLE_ELAPSE_20TRD
     WHEN PURCHS_CYCLE_ELAPSE_20TRD IS NULL AND PURCHS_CYCLE_ELAPSE_40NOB <= PURCHS_CYCLE_ELAPSE_41PKM   THEN PURCHS_CYCLE_ELAPSE_40NOB
     WHEN PURCHS_CYCLE_ELAPSE_40NOB IS NULL AND PURCHS_CYCLE_ELAPSE_41PKM <= PURCHS_CYCLE_ELAPSE_20TRD   THEN PURCHS_CYCLE_ELAPSE_41PKM
     
     WHEN PURCHS_CYCLE_ELAPSE_41PKM IS NULL AND PURCHS_CYCLE_ELAPSE_20TRD > PURCHS_CYCLE_ELAPSE_40NOB   THEN PURCHS_CYCLE_ELAPSE_40NOB
     WHEN PURCHS_CYCLE_ELAPSE_20TRD IS NULL AND PURCHS_CYCLE_ELAPSE_40NOB > PURCHS_CYCLE_ELAPSE_41PKM   THEN PURCHS_CYCLE_ELAPSE_41PKM
     WHEN PURCHS_CYCLE_ELAPSE_40NOB IS NULL AND PURCHS_CYCLE_ELAPSE_41PKM > PURCHS_CYCLE_ELAPSE_20TRD   THEN PURCHS_CYCLE_ELAPSE_20TRD
     

     WHEN PURCHS_CYCLE_ELAPSE_20TRD IS NULL THEN PURCHS_CYCLE_ELAPSE_40NOB
     ELSE PURCHS_CYCLE_ELAPSE_20TRD END AS PURCHS_CYCLE_ELAPSE_OFF_BIZTP 
     
FROM 
(SELECT CUST_ID  FROM RETENTION_TARGET1)  t1
JOIN 
(SELECT CUST_ID,
MAX(CASE WHEN BIZTP_CD='20' THEN DAVG_PURCHS_AMT_EXC_ELEC END) AS OTH_CH_DAVG_AMT_20TRD, 
MAX(CASE WHEN BIZTP_CD='40' THEN DAVG_PURCHS_AMT_EXC_ELEC END) AS OTH_CH_DAVG_AMT_40NOB, 
MAX(CASE WHEN BIZTP_CD='41' THEN DAVG_PURCHS_AMT_EXC_ELEC END) AS OTH_CH_DAVG_AMT_41PKM, 

MAX(CASE WHEN BIZTP_CD='20' THEN PURCHS_CYCLE_ELAPSE END) AS PURCHS_CYCLE_ELAPSE_20TRD, 
MAX(CASE WHEN BIZTP_CD='40' THEN PURCHS_CYCLE_ELAPSE END) AS PURCHS_CYCLE_ELAPSE_40NOB,
MAX(CASE WHEN BIZTP_CD='41' THEN PURCHS_CYCLE_ELAPSE END) AS PURCHS_CYCLE_ELAPSE_41PKM 
FROM CDS_AMT.TB_AMT_BIZTP_CUST_DNA_DATA WHERE TO_CHAR(YM_WCNT ,'YYYYMMDD')=CONCAT( TO_CHAR(ADD_MONTHS(:YM_BAIN ,+1),'YYYYMM'),'01') 
AND AFLCO_CD='001' AND BIZTP_CD IN ('20','40','41') GROUP BY CUST_ID 
) t3 ON t1.CUST_ID = t3.CUST_ID  
LEFT JOIN 
(SELECT CUST_ID,
MAX(CASE WHEN BIZTP_CD='20' THEN DAVG_PURCHS_AMT_EXC_ELEC END) AS OTH_CH_DAVG_AMT_20TRD_EX, 
MAX(CASE WHEN BIZTP_CD='40' THEN DAVG_PURCHS_AMT_EXC_ELEC END) AS OTH_CH_DAVG_AMT_40NOB_EX, 
MAX(CASE WHEN BIZTP_CD='41' THEN DAVG_PURCHS_AMT_EXC_ELEC END) AS OTH_CH_DAVG_AMT_41PKM_EX, 

MAX(CASE WHEN BIZTP_CD='20' THEN PURCHS_CYCLE_ELAPSE END) AS PURCHS_CYCLE_ELAPSE_20TRD_EX, 
MAX(CASE WHEN BIZTP_CD='40' THEN PURCHS_CYCLE_ELAPSE END) AS PURCHS_CYCLE_ELAPSE_40NOB_EX,
MAX(CASE WHEN BIZTP_CD='41' THEN PURCHS_CYCLE_ELAPSE END) AS PURCHS_CYCLE_ELAPSE_41PKM_EX 
FROM CDS_AMT.TB_AMT_BIZTP_CUST_DNA_DATA WHERE TO_CHAR(YM_WCNT ,'YYYYMMDD')=CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM'),'01') 
AND AFLCO_CD='001' AND BIZTP_CD IN ('20','40','41') GROUP BY CUST_ID 
) t4 ON t1.CUST_ID = t4.CUST_ID
WHERE  t3.PURCHS_CYCLE_ELAPSE_20TRD IS NOT NULL OR  t3.PURCHS_CYCLE_ELAPSE_40NOB IS NOT NULL OR  t3.PURCHS_CYCLE_ELAPSE_41PKM IS NOT NULL 
),


/***************************************************************************************************/	
/** 상품분류체계 변경 시 변경 부분1 시작 : PRDT_ORD1부터 PRDT_ORD4 목록 담당 코드에 맞게 삭제 및 추가**/
PRDT_ORD1 AS
(SELECT --:YM_BAIN  AS BAIN_GRADE_YM,
/*+ PARALLEL(a 4) */ CUST_ID,

COALESCE(AMT_LV1_10_Q1,0)/NULLIF(CNT_LV1_10_Q1,0)  AS DAVG_AMT_LV1_10_Q1,
COALESCE(AMT_LV1_11_Q1,0)/NULLIF(CNT_LV1_11_Q1,0)  AS DAVG_AMT_LV1_11_Q1,   


COALESCE(AMT_LV1_10_Q2,0)/NULLIF(CNT_LV1_10_Q2,0)  AS DAVG_AMT_LV1_10_Q2,
COALESCE(AMT_LV1_11_Q2,0)/NULLIF(CNT_LV1_11_Q2,0)  AS DAVG_AMT_LV1_11_Q2, 

--DAYS_BETWEEN(MAX_DT,CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN ,+1),'YYYYMM'),'01')) AS PURCHS_CYCLE_ELAPSE,
DAYS_BETWEEN(MAX_DT_LV1_10,CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN ,+1),'YYYYMM'),'01')) AS PURCHS_CYCLE_ELAPSE_LV1_10,
DAYS_BETWEEN(MAX_DT_LV1_11,CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN ,+1),'YYYYMM'),'01')) AS PURCHS_CYCLE_ELAPSE_LV1_11,

CASE WHEN COALESCE(CNT_LV1_10_Q1,0) > 0 AND COALESCE(CNT_LV1_10_Q2,0)=0 THEN 1 ELSE COALESCE(COALESCE(CNT_LV1_10_Q1,0)/NULLIF(CNT_LV1_10_Q2,0) - 1,0) END AS CNT_LV1_10_RT,
CASE WHEN COALESCE(CNT_LV1_11_Q1,0) > 0 AND COALESCE(CNT_LV1_11_Q2,0)=0 THEN 1 ELSE COALESCE(COALESCE(CNT_LV1_11_Q1,0)/NULLIF(CNT_LV1_11_Q2,0) - 1,0) END AS CNT_LV1_11_RT, 
 
CNT_LV1_10_TOT,
CNT_LV1_11_TOT 
FROM
(
SELECT /*+ PARALLEL(a 4) */ a.CUST_ID, 
		COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='10'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_10_Q1,
		COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='11'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_11_Q1, 
		
		COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='10'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_10_Q2,
		COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='11'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_11_Q2, 
		
		 
		COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='10'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_10_TOT,
		COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='11'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_11_TOT, 
		 
		SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='10'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_10_Q1,
		SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='11'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_11_Q1,  
		
		SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='10'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_10_Q2,
		SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='11'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_11_Q2,
		
		--MAX(A.BSN_DT) AS MAX_DT,
		MAX(CASE WHEN PRDT_DI_CD='10'  THEN A.BSN_DT ELSE NULL END) AS MAX_DT_LV1_10,
		MAX(CASE WHEN PRDT_DI_CD='11'  THEN A.BSN_DT ELSE NULL END) AS MAX_DT_LV1_11 

		FROM 
		RCIPT_DETAIL A 
		WHERE PRDT_DI_CD IN ('10','11') 
		GROUP BY a.CUST_ID	
)
),

PRDT_ORD2 AS
(SELECT  
CUST_ID,

COALESCE(AMT_LV1_20_Q1,0)/NULLIF(CNT_LV1_20_Q1,0)  AS DAVG_AMT_LV1_20_Q1,
COALESCE(AMT_LV1_30_Q1,0)/NULLIF(CNT_LV1_30_Q1,0)  AS DAVG_AMT_LV1_30_Q1,

COALESCE(AMT_LV1_20_Q2,0)/NULLIF(CNT_LV1_20_Q2,0)  AS DAVG_AMT_LV1_20_Q2,
COALESCE(AMT_LV1_30_Q2,0)/NULLIF(CNT_LV1_30_Q2,0)  AS DAVG_AMT_LV1_30_Q2,
  
 
DAYS_BETWEEN(MAX_DT_LV1_20,CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN ,+1),'YYYYMM'),'01')) AS PURCHS_CYCLE_ELAPSE_LV1_20,
DAYS_BETWEEN(MAX_DT_LV1_30,CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN ,+1),'YYYYMM'),'01')) AS PURCHS_CYCLE_ELAPSE_LV1_30,
 
CASE WHEN COALESCE(CNT_LV1_20_Q1,0) > 0 AND COALESCE(CNT_LV1_20_Q2,0)=0 THEN 1 ELSE COALESCE(COALESCE(CNT_LV1_20_Q1,0)/NULLIF(CNT_LV1_20_Q2,0) - 1,0) END AS CNT_LV1_20_RT,
CASE WHEN COALESCE(CNT_LV1_30_Q1,0) > 0 AND COALESCE(CNT_LV1_30_Q2,0)=0 THEN 1 ELSE COALESCE(COALESCE(CNT_LV1_30_Q1,0)/NULLIF(CNT_LV1_30_Q2,0) - 1,0) END AS CNT_LV1_30_RT,
  
CNT_LV1_20_TOT,
CNT_LV1_30_TOT   
FROM
(
	SELECT /*+ PARALLEL(a 4) */ a.CUST_ID, 
	 
	COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='20'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_20_Q1,
	COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='30'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_30_Q1, 
	 
	COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='20'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_20_Q2,
	COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='30'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_30_Q2,
	
	COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='20'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_20_TOT,
	COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='30'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_30_TOT,
	
	SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='20'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_20_Q1,
	SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='30'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_30_Q1,
	  
	SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='20'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_20_Q2,
	SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='30'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_30_Q2,
	
	MAX(CASE WHEN PRDT_DI_CD='20'  THEN A.BSN_DT ELSE NULL END) AS MAX_DT_LV1_20,
	MAX(CASE WHEN PRDT_DI_CD='30'  THEN A.BSN_DT ELSE NULL END) AS MAX_DT_LV1_30 

	FROM 
	RCIPT_DETAIL A 
	WHERE PRDT_DI_CD IN ('20','30')  
	GROUP BY a.CUST_ID	
)
),

PRDT_ORD3 AS
(SELECT  
CUST_ID,
COALESCE(AMT_LV1_40_Q1,0)/NULLIF(CNT_LV1_40_Q1,0)  AS DAVG_AMT_LV1_40_Q1,
COALESCE(AMT_LV1_41_Q1,0)/NULLIF(CNT_LV1_41_Q1,0)  AS DAVG_AMT_LV1_41_Q1,
COALESCE(AMT_LV1_42_Q1,0)/NULLIF(CNT_LV1_42_Q1,0)  AS DAVG_AMT_LV1_42_Q1,
 
COALESCE(AMT_LV1_40_Q2,0)/NULLIF(CNT_LV1_40_Q2,0)  AS DAVG_AMT_LV1_40_Q2,
COALESCE(AMT_LV1_41_Q2,0)/NULLIF(CNT_LV1_41_Q2,0)  AS DAVG_AMT_LV1_41_Q2,
COALESCE(AMT_LV1_42_Q2,0)/NULLIF(CNT_LV1_42_Q2,0)  AS DAVG_AMT_LV1_42_Q2,
 
DAYS_BETWEEN(MAX_DT_LV1_40,CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN ,+1),'YYYYMM'),'01')) AS PURCHS_CYCLE_ELAPSE_LV1_40,
DAYS_BETWEEN(MAX_DT_LV1_41,CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN ,+1),'YYYYMM'),'01')) AS PURCHS_CYCLE_ELAPSE_LV1_41,
DAYS_BETWEEN(MAX_DT_LV1_42,CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN ,+1),'YYYYMM'),'01')) AS PURCHS_CYCLE_ELAPSE_LV1_42,
 
CASE WHEN COALESCE(CNT_LV1_40_Q1,0) > 0 AND COALESCE(CNT_LV1_40_Q2,0)=0 THEN 1 ELSE COALESCE(COALESCE(CNT_LV1_40_Q1,0)/NULLIF(CNT_LV1_40_Q2,0) - 1,0) END AS CNT_LV1_40_RT,
CASE WHEN COALESCE(CNT_LV1_41_Q1,0) > 0 AND COALESCE(CNT_LV1_41_Q2,0)=0 THEN 1 ELSE COALESCE(COALESCE(CNT_LV1_41_Q1,0)/NULLIF(CNT_LV1_41_Q2,0) - 1,0) END AS CNT_LV1_41_RT,
CASE WHEN COALESCE(CNT_LV1_42_Q1,0) > 0 AND COALESCE(CNT_LV1_42_Q2,0)=0 THEN 1 ELSE COALESCE(COALESCE(CNT_LV1_42_Q1,0)/NULLIF(CNT_LV1_42_Q2,0) - 1,0) END AS CNT_LV1_42_RT, 

CNT_LV1_40_TOT,
CNT_LV1_41_TOT,
CNT_LV1_42_TOT  
FROM
(
SELECT /*+ PARALLEL(a 4) */ a.CUST_ID, 
 
COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='40'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_40_Q1,
COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='41'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_41_Q1,
COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='42'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_42_Q1,
 
COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='40'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_40_Q2,
COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='41'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_41_Q2,
COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='42'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_42_Q2,
 
COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='40'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_40_TOT,
COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='41'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_41_TOT,
COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='42'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_42_TOT,

SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='40'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_40_Q1,
SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='41'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_41_Q1,
SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='42'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_42_Q1,

SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='40'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_40_Q2,
SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='41'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_41_Q2,
SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='42'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_42_Q2,
 
MAX(CASE WHEN PRDT_DI_CD='40'  THEN A.BSN_DT ELSE NULL END) AS MAX_DT_LV1_40,
MAX(CASE WHEN PRDT_DI_CD='41'  THEN A.BSN_DT ELSE NULL END) AS MAX_DT_LV1_41,
MAX(CASE WHEN PRDT_DI_CD='42'  THEN A.BSN_DT ELSE NULL END) AS MAX_DT_LV1_42 

	FROM 
	RCIPT_DETAIL A 
	WHERE PRDT_DI_CD IN ('40','41','42') 
	GROUP BY a.CUST_ID	
)
),
PRDT_ORD4 AS (
SELECT   CUST_ID,
COALESCE(AMT_LV1_50_Q1,0)/NULLIF(CNT_LV1_50_Q1,0)  AS DAVG_AMT_LV1_50_Q1,
COALESCE(AMT_LV1_60_Q1,0)/NULLIF(CNT_LV1_60_Q1,0)  AS DAVG_AMT_LV1_60_Q1,
COALESCE(AMT_LV1_70_Q1,0)/NULLIF(CNT_LV1_70_Q1,0)  AS DAVG_AMT_LV1_70_Q1,  

COALESCE(AMT_LV1_50_Q2,0)/NULLIF(CNT_LV1_50_Q2,0)  AS DAVG_AMT_LV1_50_Q2,
COALESCE(AMT_LV1_60_Q2,0)/NULLIF(CNT_LV1_60_Q2,0)  AS DAVG_AMT_LV1_60_Q2,
COALESCE(AMT_LV1_70_Q2,0)/NULLIF(CNT_LV1_70_Q2,0)  AS DAVG_AMT_LV1_70_Q2,

DAYS_BETWEEN(MAX_DT_LV1_50,CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN ,+1),'YYYYMM'),'01')) AS PURCHS_CYCLE_ELAPSE_LV1_50,
DAYS_BETWEEN(MAX_DT_LV1_60,CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN ,+1),'YYYYMM'),'01')) AS PURCHS_CYCLE_ELAPSE_LV1_60,
DAYS_BETWEEN(MAX_DT_LV1_70,CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN ,+1),'YYYYMM'),'01')) AS PURCHS_CYCLE_ELAPSE_LV1_70, 

CASE WHEN COALESCE(CNT_LV1_50_Q1,0) > 0 AND COALESCE(CNT_LV1_50_Q2,0)=0 THEN 1 ELSE COALESCE(COALESCE(CNT_LV1_50_Q1,0)/NULLIF(CNT_LV1_50_Q2,0) - 1,0) END AS CNT_LV1_50_RT,
CASE WHEN COALESCE(CNT_LV1_60_Q1,0) > 0 AND COALESCE(CNT_LV1_60_Q2,0)=0 THEN 1 ELSE COALESCE(COALESCE(CNT_LV1_60_Q1,0)/NULLIF(CNT_LV1_60_Q2,0) - 1,0) END AS CNT_LV1_60_RT,
CASE WHEN COALESCE(CNT_LV1_70_Q1,0) > 0 AND COALESCE(CNT_LV1_70_Q2,0)=0 THEN 1 ELSE COALESCE(COALESCE(CNT_LV1_70_Q1,0)/NULLIF(CNT_LV1_70_Q2,0) - 1,0) END AS CNT_LV1_70_RT,

CNT_LV1_50_TOT,
CNT_LV1_60_TOT,
CNT_LV1_70_TOT
FROM
(
SELECT /*+ PARALLEL(a 4) */ a.CUST_ID,
COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='50'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_50_Q1,
COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='60'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_60_Q1,
COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='70'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_70_Q1,

COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='50'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_50_Q2,
COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='60'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_60_Q2,
COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='70'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_70_Q2,

COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='50'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_50_TOT,
COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='60'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_60_TOT,
COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='70'  THEN A.BSN_DT ELSE NULL END) AS CNT_LV1_70_TOT,

SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='50'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_50_Q1,
SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='60'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_60_Q1,
SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-0),'YYYYMM') AND PRDT_DI_CD='70'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_70_Q1,

SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='50'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_50_Q2,
SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='60'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_60_Q2,
SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,-3),'YYYYMM') AND PRDT_DI_CD='70'  THEN A.SALE_AMT ELSE 0 END) AS AMT_LV1_70_Q2,
 
MAX(CASE WHEN PRDT_DI_CD='50'  THEN A.BSN_DT ELSE NULL END) AS MAX_DT_LV1_50,
MAX(CASE WHEN PRDT_DI_CD='60'  THEN A.BSN_DT ELSE NULL END) AS MAX_DT_LV1_60,
MAX(CASE WHEN PRDT_DI_CD='70'  THEN A.BSN_DT ELSE NULL END) AS MAX_DT_LV1_70

	FROM 
	RCIPT_DETAIL A 
	WHERE PRDT_DI_CD IN ('50','60','70')
	GROUP BY a.CUST_ID	
)
),
/** 상품분류체계 변경 시 변경 부분1 끝 : PRDT_ORD1부터 PRDT_ORD4 목록 담당 코드에 맞게 삭제 및 추가**/
/***************************************************************************************************/
POINT AS
(SELECT 
t0.CUST_ID, t1.USEFL_POINT  , COALESCE(POINT_AF_SAVE,0) AS POINT_AF_SAVE, COALESCE(POINT_AF_USE,0) AS POINT_AF_USE,
CASE WHEN t1.USEFL_POINT+COALESCE(POINT_AF_USE,0) - COALESCE(POINT_AF_SAVE,0) < 0 THEN 0 ELSE  t1.USEFL_POINT+COALESCE(POINT_AF_USE,0) - COALESCE(POINT_AF_SAVE,0) END AS USEFL_POINT_EX,
COALESCE(POINT_SAVE_6M,0) AS POINT_SAVE_6M
FROM (SELECT CUST_ID  FROM RETENTION_TARGET1)  t0 JOIN CDS_DW.TB_DW_POINT_CUST_RMAIN_POINT t1
ON t0.CUST_ID = t1.CUST_ID
LEFT JOIN (
SELECT CUST_ID,
SUM(CASE WHEN  SAVING_DT >= CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN ,+1),'YYYY-MM'),'-01') THEN SAVING_POINT ELSE 0 END) AS POINT_AF_SAVE,
SUM(CASE WHEN TO_CHAR(SAVING_DT,'YYYYMM') BETWEEN  TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN ,+0),'YYYYMM') THEN SAVING_POINT ELSE 0 END) AS POINT_SAVE_6M
FROM CDS_DW.TB_DW_POINT_SAVING    --아직 테이블 이관 안 됨 
WHERE SAVING_DT BETWEEN CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN ,-5),'YYYY-MM'),'-01') AND (SELECT ADD_DAYS(max(LAST_LOAD_DT),-1)  FROM CDS_DW.TB_DW_POINT_CUST_RMAIN_POINT) GROUP BY CUST_ID) t2
ON t1.CUST_ID = t2.CUST_ID
LEFT JOIN (
SELECT CUST_ID, sum(USE_POINT) AS POINT_AF_USE  FROM CDS_DW.TB_DW_POINT_USE 
WHERE USE_DT BETWEEN CONCAT( TO_CHAR(ADD_MONTHS(:YM_BAIN ,+1),'YYYY-MM'),'-01') AND (SELECT ADD_DAYS(max(LAST_LOAD_DT),-1)  FROM CDS_DW.TB_DW_POINT_CUST_RMAIN_POINT) GROUP BY CUST_ID) t3
ON t1.CUST_ID = t3.CUST_ID
)


SELECT  DF1.BAIN_GRADE_YM
	  , t1.YM_WCNT AS DNA_YM_WCNT
	  , DF1.CUST_ID 
      , CASE WHEN DF1.BAIN_GRADE_CD IN ('1','2') AND (DF1.TARGET_YN_GRADE=1 OR DF2.TARGET_YN_AMT=1) THEN 1 
             WHEN DF1.BAIN_GRADE_CD IN ('3','4') AND (DF2.TARGET_YN_AMT=1) THEN 1 ELSE 0 END AS TARGET_YN
      , COALESCE(DF1.BAIN_GRADE_CD,'99') AS BAIN_GRADE_CD
	  , t4.GRADE_NM
	  , DF1.BAIN_GRADE_CD_AF1M
	  , DF1.BAIN_GRADE_CD_AF2M
	  , DF1.BAIN_GRADE_CD_AF3M 
      , DF1.LV_CHG_CAT
      , DF1.LV_CHG_G
      , DF2.SALE_AMT_DIFF_GRADE
      
/*1. 고객 유형(고객 내적요인) */
--1) 고객의 데모적 특성      
      , COALESCE (t1.AGE,999) AS AGE
      , COALESCE (t1.LSTAGE_GROUP, '99') AS LSTAGE_GROUP, COALESCE (t3.DNA_ID_NM,'기타') AS LSTAGE_NM
      

--3) 고객로열티  
	  
	  , COALESCE (t1.FRST_PARTY_ELAPSE,0) AS FRST_PARTY_ELAPSE
  	  , COALESCE (t2.CUST_GRADE_CD,'99') AS GRADE_EMART_001_01
	  
/*2. 이탈 징후(이용 니즈 변화) */
	  
--1) 보유자산, 이용규모변화  : 포인트 사용액, 이용 변동성, 앱 사용 실적 등	  
	  --신세계포인트
	  , COALESCE(DF3.USEFL_POINT_EX,0) AS USEFL_POINT_EX
	  , COALESCE(DF3.POINT_SAVE_6M,0) AS POINT_SAVE_6M
	  		
      --구매주기 및 회당객단가 변동성
	  , COALESCE(t2.PURCHS_CYCLE_CHG,0)   AS PURCHS_CYCLE_CHG   
      , COALESCE(t2.DAVG_PURCHS_AMT_CHG,0)   AS DAVG_PURCHS_AMT_CHG

	    
--2) 선호채널 변화 : 1년내 해당 관계사나 업태의 이력 있는 고객의 값만  사용
--타업태 이용여부 및 이용 증감 

      , COALESCE(CASE WHEN DF4.PURCHS_CYCLE_ELAPSE_OFF_BIZTP> 180 THEN 180 ELSE DF4.PURCHS_CYCLE_ELAPSE_OFF_BIZTP END , 180) AS PURCHS_CYCLE_ELAPSE_OFF_BIZTP
   
	  
--3) 상품 이용변화 :  전체 및 상품별 구매횟수, 회당 객단가 증감율(3개월전비교), 구매경과일 ----- 담당별 증감율 

	  , COALESCE(DF5.ORD_4QTY,0) AS ORD_4QTY

	  
	  , COALESCE(CASE WHEN t2.PURCHS_CYCLE_ELAPSE > 180 THEN 180 ELSE t2.PURCHS_CYCLE_ELAPSE END, 180) AS PURCHS_CYCLE_ELAPSE
	  
	  ,COALESCE(DF5.CNT_Q1,0) + COALESCE(DF5.CNT_Q2,0) AS CNT_TOT_6M
	  
      ,COALESCE(DF5.CNT_DIFF_Q1_Q2,0) AS CNT_DIFF_Q1_Q2
      ,COALESCE(DF5.CNT_DIFF_Q2_Q3,0) AS CNT_DIFF_Q2_Q3
      ,COALESCE(DF5.CNT_DIFF_Q3_Q4,0) AS CNT_DIFF_Q3_Q4 
      
      ,COALESCE(DF5.DAVG_AMT_DIFF_Q1_Q2,0) AS DAVG_AMT_DIFF_Q1_Q2
      ,COALESCE(DF5.DAVG_AMT_DIFF_Q2_Q3,0) AS DAVG_AMT_DIFF_Q2_Q3
      ,COALESCE(DF5.DAVG_AMT_DIFF_Q3_Q4,0) AS DAVG_AMT_DIFF_Q3_Q4  
      
      ,COALESCE(DF5.DAVG_AMT_RT_Q1_Q2,0) AS DAVG_AMT_RT_Q1_Q2
      ,COALESCE(DF5.DAVG_AMT_RT_Q2_Q3,0) AS DAVG_AMT_RT_Q2_Q3
      ,COALESCE(DF5.DAVG_AMT_RT_Q3_Q4,0) AS DAVG_AMT_RT_Q3_Q4  

      
      
/***************************************************************************************************/	      
/** 상품분류체계 변경 시 변경 부분2 시작 : 사용 항목 명칭 담당 코드에 맞게 삭제 및 추가**/     
		,COALESCE(CASE WHEN PURCHS_CYCLE_ELAPSE_LV1_10 > 180 THEN 180 ELSE PURCHS_CYCLE_ELAPSE_LV1_10 END,180) AS PURCHS_CYCLE_ELAPSE_LV1_10 
		,COALESCE(CASE WHEN PURCHS_CYCLE_ELAPSE_LV1_11 > 180 THEN 180 ELSE PURCHS_CYCLE_ELAPSE_LV1_11 END,180) AS PURCHS_CYCLE_ELAPSE_LV1_11
--		,COALESCE(CASE WHEN PURCHS_CYCLE_ELAPSE_LV1_20 > 180 THEN 180 ELSE PURCHS_CYCLE_ELAPSE_LV1_20 END,180) AS PURCHS_CYCLE_ELAPSE_LV1_20
		,COALESCE(CASE WHEN PURCHS_CYCLE_ELAPSE_LV1_30 > 180 THEN 180 ELSE PURCHS_CYCLE_ELAPSE_LV1_30 END,180) AS PURCHS_CYCLE_ELAPSE_LV1_30
		,COALESCE(CASE WHEN PURCHS_CYCLE_ELAPSE_LV1_40 > 180 THEN 180 ELSE PURCHS_CYCLE_ELAPSE_LV1_40 END,180) AS PURCHS_CYCLE_ELAPSE_LV1_40
		,COALESCE(CASE WHEN PURCHS_CYCLE_ELAPSE_LV1_41 > 180 THEN 180 ELSE PURCHS_CYCLE_ELAPSE_LV1_41 END,180) AS PURCHS_CYCLE_ELAPSE_LV1_41
--		,COALESCE(CASE WHEN PURCHS_CYCLE_ELAPSE_LV1_42 > 180 THEN 180 ELSE PURCHS_CYCLE_ELAPSE_LV1_42 END,180) AS PURCHS_CYCLE_ELAPSE_LV1_42
		,COALESCE(CASE WHEN PURCHS_CYCLE_ELAPSE_LV1_50 > 180 THEN 180 ELSE PURCHS_CYCLE_ELAPSE_LV1_50 END,180) AS PURCHS_CYCLE_ELAPSE_LV1_50
		,COALESCE(CASE WHEN PURCHS_CYCLE_ELAPSE_LV1_60 > 180 THEN 180 ELSE PURCHS_CYCLE_ELAPSE_LV1_60 END,180) AS PURCHS_CYCLE_ELAPSE_LV1_60
		,COALESCE(CASE WHEN PURCHS_CYCLE_ELAPSE_LV1_70 > 180 THEN 180 ELSE PURCHS_CYCLE_ELAPSE_LV1_70 END,180) AS PURCHS_CYCLE_ELAPSE_LV1_70
		
		
				 
		,COALESCE(CNT_LV1_10_TOT,0) AS CNT_LV1_10_TOT
--		,COALESCE(CNT_LV1_11_TOT,0) AS CNT_LV1_11_TOT
		,COALESCE(CNT_LV1_20_TOT,0) AS CNT_LV1_20_TOT
		,COALESCE(CNT_LV1_30_TOT,0) AS CNT_LV1_30_TOT
		,COALESCE(CNT_LV1_40_TOT,0) AS CNT_LV1_40_TOT
--		,COALESCE(CNT_LV1_41_TOT,0) AS CNT_LV1_41_TOT
--		,COALESCE(CNT_LV1_42_TOT,0) AS CNT_LV1_42_TOT
--		,COALESCE(CNT_LV1_50_TOT,0) AS CNT_LV1_50_TOT
--		,COALESCE(CNT_LV1_60_TOT,0) AS CNT_LV1_60_TOT
		,COALESCE(CNT_LV1_70_TOT,0) AS CNT_LV1_70_TOT


		,CASE WHEN COALESCE(DAVG_AMT_LV1_50_Q1,0) > 0 AND COALESCE(DAVG_AMT_LV1_50_Q2,0)=0 THEN 1 ELSE COALESCE(COALESCE(DAVG_AMT_LV1_50_Q1,0)/NULLIF(DAVG_AMT_LV1_50_Q2,0) - 1,0) END AS DAVG_AMT_LV1_50_RT

/** 상품분류체계 변경 시 변경 부분2 끝 : 사용 항목 명칭 담당 코드에 맞게 삭제 및 추가**/
/***************************************************************************************************/			
		

FROM 
--타겟정보1 : 등급변경
RETENTION_TARGET1 AS DF1

JOIN 
--타겟정보2 : 금액하락
RETENTION_TARGET2 AS DF2 ON DF1.CUST_ID=DF2.CUST_ID AND  DF1.BAIN_GRADE_YM=DF2.BAIN_GRADE_YM

JOIN
--DNA공통
TB_AMT_CMMN_CUST_DNA_DATA  t1 ON DF1.CUST_ID = t1.CUST_ID AND TO_CHAR(t1.YM_WCNT ,'YYYYMMDD')= CONCAT( TO_CHAR(ADD_MONTHS(:YM_BAIN ,+1),'YYYYMM'),'01') 

--DNA업태
JOIN TB_AMT_BIZTP_CUST_DNA_DATA t2 ON DF1.CUST_ID = t2.CUST_ID AND t2.AFLCO_CD ='001' AND t2.BIZTP_CD ='10' AND TO_CHAR(t2.YM_WCNT ,'YYYYMMDD')= CONCAT( TO_CHAR(ADD_MONTHS(:YM_BAIN,+1),'YYYYMM'),'01') 

LEFT JOIN (SELECT * FROM CDS_AMT.TB_AMT_DNA_COMM_CD WHERE DNA_ID_GRP_CD ='LIFESTAGE') t3 ON t1.LSTAGE_GROUP=t3.DNA_ID_CD
LEFT JOIN CDS_DW.TB_BAIN_MEMBR_GRADE_CD t4 ON DF1.BAIN_GRADE_CD = t4.GRADE_CD 


--포인트 정보
LEFT JOIN POINT AS DF3 ON DF1.CUST_ID=DF3.CUST_ID

--타업태 이용여부 및 이용 증감 
LEFT JOIN OTH_CH_USE1 AS DF4 ON DF1.CUST_ID=DF4.CUST_ID 


--1년간 분기별 구매 실적
LEFT JOIN RCIPT_SUMMARY_1Y AS DF5 ON DF1.CUST_ID=DF5.CUST_ID 


-- 6개월간 상품 담당별 구매 실적(총합계 및 최근 1분기전과 2분기전 차이)
LEFT JOIN PRDT_ORD1 AS DF10_1 ON DF1.CUST_ID=DF10_1.CUST_ID
LEFT JOIN PRDT_ORD2 AS DF10_2 ON DF1.CUST_ID=DF10_2.CUST_ID
LEFT JOIN PRDT_ORD3 AS DF10_3 ON DF1.CUST_ID=DF10_3.CUST_ID
LEFT JOIN PRDT_ORD4 AS DF10_4 ON DF1.CUST_ID=DF10_4.CUST_ID

)
