/*모델 대상 : 20년 5월 Bain등급 보유 고객*/
/*DNA 기준일자 : 2020-06-01 , Bain 기준월 : 202005, DNA RFM레벨 증감 비교 : 직전월대비 RFM 가지점수 1점이상 증가, 각 월별 예측 */ -- 생성시간  약 15분
--DROP TABLE CDS_AMT.TB_AMT_POTENTIAL_TRAIN_202005
CREATE COLUMN TABLE CDS_AMT.TB_AMT_POTENTIAL_TRAIN_:YM_BAIN
(				
	BAIN_GRADE_YM	NVARCHAR(6)	NOT NULL  COMMENT	'베인등급 기준연월'	
,	DNA_YM_WCNT	NVARCHAR(10)	NOT NULL  COMMENT	'DNA 기준연월'	
,	CUST_ID	NVARCHAR(20)	NOT NULL  COMMENT	'고객번호'	
,	BAIN_GRADE_CD	NVARCHAR(2)	NOT NULL  COMMENT	'회원등급_베인등급 코드'	
,	GRADE_NM	NVARCHAR(100)	COMMENT	'회원등급_베인등급 이름'	
,	TARGET_YN	TINYINT	NOT NULL  COMMENT	'잠재우수 예측 대상 여부(Y=1, N=0), 미래 3개월간 RFM가치 직전월 대비 증감 2회 이상'	
,	TARGET_YN_AF1	TINYINT	NOT NULL  COMMENT	'1개월 후 RFM 가치등급 직전월(기준월) 대비 RFM 가치등급 1점이상 증가여부'	
,	TARGET_YN_AF2	TINYINT	NOT NULL  COMMENT	'2개월 후 RFM 가치등급 직전월(1개월 후) 대비 RFM 가치등급 1점이상 증가여부'	
,	TARGET_YN_AF3	TINYINT	NOT NULL  COMMENT	'3개월 후 RFM 가치등급 직전월(2개월 후) 대비 RFM 가치등급 1점이상 증가여부'	
,	TARGET_G	NVARCHAR(3)	COMMENT	'잠재우수 예측 대상 그룹 3개월간 RFM가치 증감패턴'	
,	CNT_RT_Q1_Q2	DECIMAL(30,6)	COMMENT	'구매횟수 증감율(최근3개월과 4~6개월 비교)'	
,	DAVG_AMT_RT_Q1_Q2	DECIMAL(30,6)	COMMENT	'회당객단가 증감율(최근3개월과 4~6개월 비교)'	
,	PURCHS_CYCLE_RT_BF_0M_5M	DECIMAL(30,6)	COMMENT	'구매주기 증감율(현재와 5개월전 DNA 비교)'	
,	PURCHS_VISIT_CHG_RT_AVG_6M	DECIMAL(30,6)	COMMENT	'연간 구매횟수 변화율 6개월 평균'	
,	RFM_LV_RT_BF_0M_3M	DECIMAL(30,6)	COMMENT	'RFM 가치등급 증감율(현재와 3개월전 DNA 비교) '	
,	RFM_R_SCORE_RT_BF_0M_3M	DECIMAL(30,6)	COMMENT	'RFM R Score 증감율(현재와 3개월전 DNA 비교)'	
,	RFM_M_SCORE_RT_BF_0M_3M	DECIMAL(30,6)	COMMENT	'RFM M Score 증감율(현재와 3개월전 DNA 비교)'	
,	RFM_LV_DI_FRESH1_RT_BF_0M_3M	DECIMAL(30,6)	COMMENT	'RFM 가치등급(신선1) 증감율(현재와 3개월전 DNA 비교)'	
,	RFM_R_SCORE_RT_BF_0M_5M	DECIMAL(30,6)	COMMENT	'RFM R Score 증감율(현재와 5개월전 DNA 비교)'	
,	RFM_F_SCORE_RT_BF_0M_5M	DECIMAL(30,6)	COMMENT	'RFM F Score 증감율(현재와 5개월전 DNA 비교)'	
,	RFM_M_SCORE_RT_BF_0M_5M	DECIMAL(30,6)	COMMENT	'RFM M Score 증감율(현재와 5개월전 DNA 비교)'	
,	RFM_R_SCORE	SMALLINT	COMMENT	'RFM R Score'	
,	RFM_F_SCORE	SMALLINT	COMMENT	'RFM F Score'	
,	RFM_M_SCORE	SMALLINT	COMMENT	'RFM M Score'	
,	RFM_LV_DI_PRCS	SMALLINT	COMMENT	'RFM 가치등급(가공일상)'	
,	CNT_TOT_6M	DECIMAL(30)	COMMENT	'구매횟수합계_6개월간'	
,	CNT_Q1	DECIMAL(30)	COMMENT	'구매횟수합계_최근3개월'	
,	CNT_Q2	DECIMAL(30)	COMMENT	'구매횟수합계_4~6개월전'	
,	CNT_BF0M	DECIMAL(30)	COMMENT	'구매횟수합계_최근1개월'	
,	DAVG_AMT_TOT_6M	DECIMAL(30,3)	COMMENT	'회당객단가_6개월간'	
,	DAVG_AMT_Q2	DECIMAL(30,3)	COMMENT	'회당객단가_4~6개월전'	
,	PURCHS_CYCLE_ELAPSE	SMALLINT	COMMENT	'구매경과일'	
,	PURCHS_WKD	DECIMAL(30,3)	COMMENT	'주중 구매 경향성'	
					
, 	CONSTRAINT TB_AMT_POTENTIAL_TRAIN_:YM_BAIN	PRIMARY KEY (BAIN_GRADE_YM,DNA_YM_WCNT,CUST_ID,BAIN_GRADE_CD)		
)					
UNLOAD PRIORITY 5 AUTO MERGE COMMENT '(분석마트)Potential모델 월별 고객잠재우수가망예측학습테이블' 					


--DELETE FROM CDS_AMT.TB_AMT_POTENTIAL_TRAIN WHERE BAIN_GRADE_YM=:YM_BAIN
--TRUNCATE TABLE CDS_AMT.TB_AMT_POTENTIAL_TRAIN_:YM_BAIN

INSERT INTO  CDS_AMT.TB_AMT_POTENTIAL_TRAIN_:YM_BAIN
(
WITH POTENTIAL_TARGET AS (
SELECT 
BAIN_GRADE_YM ,
YM_WCNT,
CUST_ID ,
GRADE_CD , 
CASE WHEN  RFM_LV_M1_CAT||RFM_LV_M2_CAT||RFM_LV_M3_CAT  IN ('+++', '-++' , '+-+', '++-' )  THEN 1 ELSE 0  END AS TARGET_YN, -- 3개월 후 상승을 앞으로 표기하는 방식  > AF1M AF2M AF3M 레벨 증가여부로 표기 변경
CASE WHEN  RFM_LV_M1_CAT = '+'   THEN 1 ELSE 0  END AS TARGET_YN_AF1, 
CASE WHEN  RFM_LV_M2_CAT = '+'   THEN 1 ELSE 0  END AS TARGET_YN_AF2,  
CASE WHEN  RFM_LV_M3_CAT = '+'   THEN 1 ELSE 0  END AS TARGET_YN_AF3,      
RFM_LV_M1_CAT||RFM_LV_M2_CAT||RFM_LV_M3_CAT AS TARGET_G

FROM 
( SELECT :YM_BAIN AS BAIN_GRADE_YM ,
	T1.YM_WCNT,
	T1.CUST_ID ,
	T1.GRADE_CD ,
	T1.RFM_LV_AF0M ,
	T1.RFM_LV_AF1M ,
	T1.RFM_LV_AF2M ,
	T1.RFM_LV_AF3M ,
	
    T1.RFM_LV_DIFF_AF1M_AF0M ,
	T1.RFM_LV_DIFF_AF2M_AF1M ,
	T1.RFM_LV_DIFF_AF3M_AF2M ,

	(CASE
		WHEN T1.RFM_LV_DIFF_AF1M_AF0M >= 1 THEN '+'
		ELSE '-'
	END) AS RFM_LV_M1_CAT,
	
	(CASE
		WHEN T1.RFM_LV_DIFF_AF2M_AF1M >= 1 THEN '+'
		ELSE '-'
	END) AS RFM_LV_M2_CAT ,

	(CASE
		WHEN T1.RFM_LV_DIFF_AF3M_AF2M >= 1 THEN '+'
		ELSE '-'
	END) AS RFM_LV_M3_CAT ,

 
	(CASE
		WHEN T1.RFM_LV_DIFF_AF3M_AF2M >= 1 THEN 1
		ELSE 0
	END )+
	(CASE
		WHEN T1.RFM_LV_DIFF_AF2M_AF1M >= 1 THEN 1
		ELSE 0
	END )+
	(CASE
		WHEN T1.RFM_LV_DIFF_AF1M_AF0M >= 1 THEN 1
		ELSE 0
	END ) AS RFM_UPGRADE_SCORE



FROM (
		SELECT   
				  B.CUST_ID
		        , A.GRADE_CD
		        , B.YM_WCNT
		   
		        , (B.RFM_LV_AF0M) AS RFM_LV_AF0M
		        , (B.RFM_LV_AF1M) AS RFM_LV_AF1M
		        , (B.RFM_LV_AF2M) AS RFM_LV_AF2M		        
		        , (B.RFM_LV_AF3M) AS RFM_LV_AF3M /*최근 RFM레벨, 학습데이터 기준 3개월 후 RFM*/

		        , (B.RFM_LV_AF1M - B.RFM_LV_AF0M) AS RFM_LV_DIFF_AF1M_AF0M /*M-2 과 M-3 RFM 차이 */
		        , (B.RFM_LV_AF2M - B.RFM_LV_AF1M) AS RFM_LV_DIFF_AF2M_AF1M /*전월과 M-2 RFM 차이 */
		        , (B.RFM_LV_AF3M - B.RFM_LV_AF2M) AS RFM_LV_DIFF_AF3M_AF2M /*최근과 전월 RFM 차이 */


		 FROM  
 
			  ( SELECT CUST_ID,GRADE_CD 
				FROM  CDS_DW.TB_BAIN_MEMBR_GRADE
				WHERE GRADE_YM = :YM_BAIN  
			  ) A
			  ,	  
			  ( SELECT  CUST_ID
			  		   , MIN(YM_WCNT) AS YM_WCNT
					   ,COALESCE(MAX(CASE WHEN TO_CHAR(YM_WCNT ,'YYYYMM') = to_char(ADD_MONTHS(:YM_BAIN, +1),'YYYYMM') 
							THEN RFM_LV END) ,0) AS RFM_LV_AF0M
					   ,COALESCE(MAX(CASE WHEN TO_CHAR(YM_WCNT ,'YYYYMM') = to_char(ADD_MONTHS(:YM_BAIN, +2),'YYYYMM') 
							THEN RFM_LV END) ,0) AS RFM_LV_AF1M
					   ,COALESCE(MAX(CASE WHEN TO_CHAR(YM_WCNT ,'YYYYMM') = to_char(ADD_MONTHS(:YM_BAIN, +3),'YYYYMM') 
							THEN RFM_LV END),0) AS RFM_LV_AF2M
					   ,COALESCE(MAX(CASE WHEN TO_CHAR(YM_WCNT ,'YYYYMM') = to_char(ADD_MONTHS(:YM_BAIN, +4),'YYYYMM')
							THEN RFM_LV END),0) AS RFM_LV_AF3M
 		FROM  CDS_AMT.TB_AMT_BIZTP_CUST_DNA_DATA
				WHERE BIZTP_CD = '10' 
				  AND TO_CHAR(YM_WCNT ,'YYYYMM')  >= to_char(ADD_MONTHS(:YM_BAIN, +1),'YYYYMM') 
				  AND TO_CHAR(YM_WCNT ,'YYYYMM')  <= to_char(ADD_MONTHS(:YM_BAIN, +4),'YYYYMM') 
				GROUP BY CUST_ID
			  ) B
		 WHERE A.CUST_ID = B.CUST_ID AND B.RFM_LV_AF0M > 0
	) T1) 
 --	ORDER BY RFM_LV_M1_CAT,RFM_LV_M2_CAT,RFM_LV_M3_CAT
),

RCIPT_DETAIL AS  (
			     SELECT B.CUST_ID
			     ,A.BSN_DT
			     ,D.PRDT_DI_CD
			     ,SUM(A.SALE_AMT)  AS SALE_AMT
				 FROM  CDS_DW.TB_DW_RCIPT_DETAIL A
				 JOIN POTENTIAL_TARGET B ON A.CUST_ID = B.CUST_ID
				 JOIN( SELECT PRDT_CD ,PRDT_DCODE_CD
				       FROM CDS_DW.TB_DW_PRDT_MASTR 
				       WHERE AFLCO_CD = '001' AND BIZTP_CD = '10') C ON A.PRDT_CD  = C.PRDT_CD
		         JOIN( SELECT PRDT_DCODE_CD,PRDT_DI_CD
				   	   FROM CDS_DW.TB_DW_PRDT_DCODE_CD
				   	   WHERE AFLCO_CD = '001' AND BIZTP_CD = '10') D ON C.PRDT_DCODE_CD  = D.PRDT_DCODE_CD 
				 WHERE TO_CHAR( BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN, +0),'YYYYMM')
				   AND A.AFLCO_CD ='001' 
				   AND A.BIZTP_CD ='10'
				   AND A.SALE_TRGT_YN    = 'Y'               
				   AND A.RL_SALE_TRGT_YN = 'Y'               
				   AND A.SALE_AMT > 0
				   AND A.CUST_ID IS NOT NULL
				 GROUP BY 
				 B.CUST_ID
				 ,A.BSN_DT
			     ,D.PRDT_DI_CD
			   ),
		   
SUMMARY_RCIPT_DETAIL   AS  (
				SELECT  CUST_ID
				      ,COUNT(DISTINCT BSN_DT)                                                  AS CNT_TOT_6M				      
 				      ,SUM(SALE_AMT)                                                           AS AMT_TOT_6M      
				      ,COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN,-0),'YYYYMM') THEN  BSN_DT ELSE NULL END) AS CNT_Q1  
				      ,COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN,-3),'YYYYMM') THEN  BSN_DT ELSE NULL END) AS CNT_Q2
				      ,SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN,-2),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN,-0),'YYYYMM') THEN SALE_AMT ELSE 0 END) AS AMT_Q1
				      ,SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') BETWEEN TO_CHAR(ADD_MONTHS(:YM_BAIN,-5),'YYYYMM') AND TO_CHAR(ADD_MONTHS(:YM_BAIN,-3),'YYYYMM') THEN  SALE_AMT ELSE 0 END) AS AMT_Q2
				      
				      ,COUNT(DISTINCT CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') = TO_CHAR(ADD_MONTHS(:YM_BAIN,-0),'YYYYMM') THEN  BSN_DT ELSE NULL END) AS CNT_BF0M --베인등급 기준 산정월 기준 당월 실적
				      ,SUM( CASE WHEN TO_CHAR(BSN_DT,'YYYYMM') = TO_CHAR(ADD_MONTHS(:YM_BAIN,-0),'YYYYMM')THEN SALE_AMT ELSE 0 END) AS AMT_BF0M  --베인등급 기준 산정월 기준 당월 실적
				     
				FROM RCIPT_DETAIL 
				GROUP BY CUST_ID
)

SELECT
		DF0.BAIN_GRADE_YM
	  , DF0.YM_WCNT AS DNA_YM_WCNT
	  , DF0.CUST_ID
  	  , COALESCE(DF0.GRADE_CD,'99') AS BAIN_GRADE_CD
	  , t4.GRADE_NM
      , DF0.TARGET_YN
      , DF0.TARGET_YN_AF1
	  , DF0.TARGET_YN_AF2
	  , DF0.TARGET_YN_AF3
      , DF0.TARGET_G
      
--2) 성장가능성1 : 이용규모 성장성연계 DNA, 누계 실적 및 RFM 증감율
	  , CASE WHEN COALESCE(CNT_Q1,0) > 0 AND COALESCE(CNT_Q2,0)=0 THEN 1 ELSE COALESCE(COALESCE(CNT_Q1,0)/NULLIF(CNT_Q2,0) - 1,0) END AS CNT_RT_Q1_Q2 
	  , CASE WHEN COALESCE(DF1.AMT_Q1/NULLIF(DF1.CNT_Q1,0),0) > 0 AND COALESCE(DF1.AMT_Q2/NULLIF(DF1.CNT_Q2,0),0)=0 THEN 1 ELSE  COALESCE(COALESCE(DF1.AMT_Q1/NULLIF(DF1.CNT_Q1,0),0)/(DF1.AMT_Q2/NULLIF(DF1.CNT_Q2,0)) - 1,0) END AS DAVG_AMT_RT_Q1_Q2 

--	  , CASE WHEN COALESCE(t1.PURCHS_CYCLE,0) > 0 AND COALESCE(t5_1.PURCHS_CYCLE_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.PURCHS_CYCLE,0)/NULLIF(t5_1.PURCHS_CYCLE_BF3M,0) - 1,0) END AS PURCHS_CYCLE_RT_BF_0M_3M
	  , CASE WHEN COALESCE(t1.PURCHS_CYCLE,0) > 0 AND COALESCE(t5_2.PURCHS_CYCLE_BF5M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.PURCHS_CYCLE,0)/NULLIF(t5_2.PURCHS_CYCLE_BF5M,0) - 1,0) END AS PURCHS_CYCLE_RT_BF_0M_5M
      , COALESCE(t1.PURCHS_VISIT_CHG_RT_AVG_6M,0) AS PURCHS_VISIT_CHG_RT_AVG_6M --연간 6개월간 구매횟수 증감율 평균
	  
/***************************************************************************************************/	  
/** 상품분류체계 변경 시 변경 부분1 시작 : 사용 항목 명칭 담당 코드에 맞게 삭제 및 추가**/     
		, CASE WHEN COALESCE(t1.RFM_LV,0) > 0 AND COALESCE(t5_1.RFM_LV_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV,0)/NULLIF(t5_1.RFM_LV_BF3M,0) - 1,0) END AS RFM_LV_RT_BF_0M_3M
		, CASE WHEN COALESCE(t1.RFM_R_SCORE,0) > 0 AND COALESCE(t5_1.RFM_R_SCORE_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_R_SCORE,0)/NULLIF(t5_1.RFM_R_SCORE_BF3M,0) - 1,0) END AS RFM_R_SCORE_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_F_SCORE,0) > 0 AND COALESCE(t5_1.RFM_F_SCORE_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_F_SCORE,0)/NULLIF(t5_1.RFM_F_SCORE_BF3M,0) - 1,0) END AS RFM_F_SCORE_RT_BF_0M_3M
		, CASE WHEN COALESCE(t1.RFM_M_SCORE,0) > 0 AND COALESCE(t5_1.RFM_M_SCORE_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_M_SCORE,0)/NULLIF(t5_1.RFM_M_SCORE_BF3M,0) - 1,0) END AS RFM_M_SCORE_RT_BF_0M_3M

		, CASE WHEN COALESCE(t1.RFM_LV_DI_FRESH1,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_FRESH1_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_FRESH1,0)/NULLIF(t5_1.RFM_LV_DI_FRESH1_BF3M,0) - 1,0) END AS RFM_LV_DI_FRESH1_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_FRESH2,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_FRESH2_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_FRESH2,0)/NULLIF(t5_1.RFM_LV_DI_FRESH2_BF3M,0) - 1,0) END AS RFM_LV_DI_FRESH2_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_PEACOCK,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_PEACOCK_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_PEACOCK,0)/NULLIF(t5_1.RFM_LV_DI_PEACOCK_BF3M,0) - 1,0) END AS RFM_LV_DI_PEACOCK_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_PRCS,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_PRCS_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_PRCS,0)/NULLIF(t5_1.RFM_LV_DI_PRCS_BF3M,0) - 1,0) END AS RFM_LV_DI_PRCS_RT_BF_0M_3M
-- 		, CASE WHEN COALESCE(t1.RFM_LV_DI_HNR,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_HNR_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_HNR,0)/NULLIF(t5_1.RFM_LV_DI_HNR_BF3M,0) - 1,0) END AS RFM_LV_DI_HNR_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_LIVING,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_LIVING_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_LIVING,0)/NULLIF(t5_1.RFM_LV_DI_LIVING_BF3M,0) - 1,0) END AS RFM_LV_DI_LIVING_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_MOLLYS,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_MOLLYS_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_MOLLYS,0)/NULLIF(t5_1.RFM_LV_DI_MOLLYS_BF3M,0) - 1,0) END AS RFM_LV_DI_MOLLYS_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_ELEC_CULTR,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_ELEC_CULTR_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_ELEC_CULTR,0)/NULLIF(t5_1.RFM_LV_DI_ELEC_CULTR_BF3M,0) - 1,0) END AS RFM_LV_DI_ELEC_CULTR_RT_BF_0M_3M
--		, CASE WHEN COALESCE(t1.RFM_LV_DI_FSHN,0) > 0 AND COALESCE(t5_1.RFM_LV_DI_FSHN_BF3M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_LV_DI_FSHN,0)/NULLIF(t5_1.RFM_LV_DI_FSHN_BF3M,0) - 1,0) END AS RFM_LV_DI_FSHN_RT_BF_0M_3M


		, CASE WHEN COALESCE(t1.RFM_R_SCORE,0) > 0 AND COALESCE(t5_2.RFM_R_SCORE_BF5M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_R_SCORE,0)/NULLIF(t5_2.RFM_R_SCORE_BF5M,0) - 1,0) END AS RFM_R_SCORE_RT_BF_0M_5M
		, CASE WHEN COALESCE(t1.RFM_F_SCORE,0) > 0 AND COALESCE(t5_2.RFM_F_SCORE_BF5M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_F_SCORE,0)/NULLIF(t5_2.RFM_F_SCORE_BF5M,0) - 1,0) END AS RFM_F_SCORE_RT_BF_0M_5M		
		, CASE WHEN COALESCE(t1.RFM_M_SCORE,0) > 0 AND COALESCE(t5_2.RFM_M_SCORE_BF5M,0)=0 THEN 1 ELSE COALESCE(COALESCE(t1.RFM_M_SCORE,0)/NULLIF(t5_2.RFM_M_SCORE_BF5M,0) - 1,0) END AS RFM_M_SCORE_RT_BF_0M_5M
	
		
--2) 성장가능성1 : 이용실적 합계 및 순위
				      
--		,COALESCE(t1.RFM_LV,0) AS RFM_LV
		,COALESCE(t1.RFM_R_SCORE,0) AS RFM_R_SCORE
		,COALESCE(t1.RFM_F_SCORE,0) AS RFM_F_SCORE
		,COALESCE(t1.RFM_M_SCORE,0) AS RFM_M_SCORE
		
--		,COALESCE(t1.RFM_LV_DI_FRESH1,0) AS RFM_LV_DI_FRESH1
--		,COALESCE(t1.RFM_LV_DI_FRESH2,0) AS RFM_LV_DI_FRESH2
--		,COALESCE(t1.RFM_LV_DI_PEACOCK,0) AS RFM_LV_DI_PEACOCK
		,COALESCE(t1.RFM_LV_DI_PRCS,0) AS RFM_LV_DI_PRCS
--		,COALESCE(t1.RFM_LV_DI_HNR,0) AS RFM_LV_DI_HNR
--		,COALESCE(t1.RFM_LV_DI_LIVING,0) AS RFM_LV_DI_LIVING
--		,COALESCE(t1.RFM_LV_DI_MOLLYS,0) AS RFM_LV_DI_MOLLYS		
--		,COALESCE(t1.RFM_LV_DI_ELEC_CULTR,0) AS RFM_LV_DI_ELEC_CULTR
--		,COALESCE(t1.RFM_LV_DI_FSHN,0) AS RFM_LV_DI_FSHN		
		
		
/** 상품분류체계 변경 시 변경 부분1 끝 : 사용 항목 명칭 담당 코드에 맞게 삭제 및 추가**/     
/***************************************************************************************************/	  
		
		,COALESCE(DF1.CNT_TOT_6M,0) AS CNT_TOT_6M
		,COALESCE(DF1.CNT_Q1,0) AS CNT_Q1
		,COALESCE(DF1.CNT_Q2,0) AS CNT_Q2 
		,COALESCE(DF1.CNT_BF0M,0) AS CNT_BF0M 
		
		
		,COALESCE(DF1.AMT_TOT_6M/NULLIF(DF1.CNT_TOT_6M,0),0) AS DAVG_AMT_TOT_6M	 		
--	,COALESCE(DF1.AMT_Q1/NULLIF(DF1.CNT_Q1,0),0) AS DAVG_AMT_Q1	 
		,COALESCE(DF1.AMT_Q2/NULLIF(DF1.CNT_Q2,0),0) AS DAVG_AMT_Q2	 
--		,COALESCE(DF1.AMT_BF0M/NULLIF(DF1.CNT_BF0M,0),0) AS DAVG_AMT_BF0M 
	
		,CASE WHEN t1.PURCHS_CYCLE_ELAPSE > 180 OR t1.PURCHS_CYCLE_ELAPSE IS NULL THEN 180 ELSE t1.PURCHS_CYCLE_ELAPSE END AS PURCHS_CYCLE_ELAPSE -- 구매경과일 전처리 이곳에서 완료, 베인등급 산정고객 대상이므로 구매경과일 최대값 180~181이어야 정상. 180로 일괄 처리.
  
----3) 지속적 사용원인2 : 고객 구매 요인 유형	  
      , COALESCE(t1.PURCHS_WKD ,0) AS PURCHS_WKD 
      
FROM
POTENTIAL_TARGET AS DF0

JOIN TB_AMT_BIZTP_CUST_DNA_DATA t1 ON DF0.CUST_ID = t1.CUST_ID AND t1.AFLCO_CD ='001' AND t1.BIZTP_CD ='10' AND TO_CHAR(t1.YM_WCNT ,'YYYYMMDD')= CONCAT( TO_CHAR(ADD_MONTHS(:YM_BAIN,+1),'YYYYMM'),'01') 

LEFT JOIN CDS_DW.TB_BAIN_MEMBR_GRADE_CD t4 ON DF0.GRADE_CD = t4.GRADE_CD 

-- 고객의  과거DNA 변화 비교용 : 해당 DNA만 가져옴


/***************************************************************************************************/
/** 상품분류체계 변경 시 변경 부분2 시작 : 사용 항목 명칭 담당 코드에 맞게 삭제 및 추가**/     
LEFT JOIN 
(SELECT CUST_ID

				, RFM_LV AS RFM_LV_BF3M
				, RFM_R_SCORE AS RFM_R_SCORE_BF3M 				
				, RFM_F_SCORE AS RFM_F_SCORE_BF3M
				, RFM_M_SCORE AS RFM_M_SCORE_BF3M 				
				
				, RFM_LV_DI_FRESH1  AS RFM_LV_DI_FRESH1_BF3M 
				, RFM_LV_DI_FRESH2  AS RFM_LV_DI_FRESH2_BF3M 
				, RFM_LV_DI_PEACOCK AS RFM_LV_DI_PEACOCK_BF3M	
				, RFM_LV_DI_PRCS	AS RFM_LV_DI_PRCS_BF3M 									
				, RFM_LV_DI_HNR	    AS RFM_LV_DI_HNR_BF3M 									
				, RFM_LV_DI_LIVING	AS RFM_LV_DI_LIVING_BF3M 
				, RFM_LV_DI_MOLLYS  AS RFM_LV_DI_MOLLYS_BF3M
				, RFM_LV_DI_ELEC_CULTR	AS RFM_LV_DI_ELEC_CULTR_BF3M 	 
				, RFM_LV_DI_FSHN AS RFM_LV_DI_FSHN_BF3M 

			    , PURCHS_CYCLE AS PURCHS_CYCLE_BF3M
				FROM TB_AMT_BIZTP_CUST_DNA_DATA 
				WHERE  AFLCO_CD ='001' AND BIZTP_CD ='10'  AND TO_CHAR(YM_WCNT ,'YYYYMMDD')= CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN,+1-3),'YYYYMM'),'01')) t5_1 
				ON DF0.CUST_ID = t5_1.CUST_ID 
				
/** 상품분류체계 변경 시 변경 부분2 끝 : 사용 항목 명칭 담당 코드에 맞게 삭제 및 추가**/    
/***************************************************************************************************/				
				
-- 고객의  과거 5개월 전 DNA정보 				
LEFT JOIN 
(SELECT CUST_ID
--				, RFM_LV AS RFM_LV_BF5M
				, RFM_R_SCORE AS RFM_R_SCORE_BF5M 				
				, RFM_F_SCORE AS RFM_F_SCORE_BF5M
				, RFM_M_SCORE AS RFM_M_SCORE_BF5M 
				
				, PURCHS_CYCLE AS PURCHS_CYCLE_BF5M
				FROM TB_AMT_BIZTP_CUST_DNA_DATA  
				WHERE  AFLCO_CD ='001' AND BIZTP_CD ='10'  AND TO_CHAR(YM_WCNT ,'YYYYMMDD')= CONCAT(TO_CHAR(ADD_MONTHS(:YM_BAIN,+1-5),'YYYYMM'),'01')) t5_2 
				ON DF0.CUST_ID = t5_2.CUST_ID

-- 고객의  과거 6개월 이력기준 
LEFT JOIN SUMMARY_RCIPT_DETAIL  DF1 ON DF0.CUST_ID = DF1.CUST_ID   
)





 